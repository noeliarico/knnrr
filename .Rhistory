set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "chebyshev", ties = "randomly", developer = TRUE)
predict_for_k(out$distances, out$cl, "randomly")
sink()
sink("zoo_jaccard_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "jaccard", ties = "randomly", developer = TRUE)
predict_for_k(out$distances, out$cl, "randomly")
sink()
sink("zoo_matching_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "matching", ties = "randomly", developer = TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
sink
sink
sink("zoo_matching_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "matching", ties = "randomly", developer = TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
sink("zoo_matching_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "matching", ties = "randomly", developer = TRUE)
predict_for_k(out$distances, out$cl, "randomly")
sink()
sink("zoo_nominal_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "nominal_avg", ties = "randomly", developer = TRUE)
predict_for_k(out$distances, out$cl, "randomly")
sink()
sink("zoo_chebyshev_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "chebyshev", ties = "randomly", developer = TRUE)
predict_for_k(out$distances, out$cl, "randomly")
sink()
mini_zoo_test
sink()
sink()
sink()
mini_zoo_test
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
mini_zoo_test
source('~/Desktop/Github/paper/mini_zoo.R', echo=TRUE)
2+2
set.seed(123)
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, "borda", atttype = "custom", ties = "randomly", developer = TRUE)
set.seed(123)
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, "borda_count", atttype = "custom", ties = "randomly", developer = TRUE)
predict_for_k(out$distances, out$cl, "randomly")
out
source('~/Desktop/Github/paper/methods/rknn/knn4.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/knn4caret.R', echo=TRUE)
set.seed(123)
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, "borda_count", atttype = "custom", ties = "randomly", developer = TRUE)
out
source('~/Desktop/Github/paper/methods/rknn/knn4.R', echo=TRUE)
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, "borda_count", atttype = "custom", ties = "randomly", developer = TRUE)
out
set.seed(123)
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, "borda_count", atttype = "custom", ties = "randomly", developer = TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, "borda_count", atttype = "custom", ties = "randomly", developer = TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/knn4.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/knn4caret.R', echo=TRUE)
set.seed(123)
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, rr = "borda_count", atttype = "custom",
ties = "randomly", developer = TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
set.seed(123)
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, rr = "borda_count", atttype = "custom",
ties = "randomly", developer = TRUE)
predict_using_por(out, out$cl, "randomly")
predict_using_por(out, k = 3, ties = "randomly")
out
out <- knn4Train(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, rr = "borda_count", atttype = "custom",
ties = "randomly", developer = TRUE)
View(knn4)
source('~/Desktop/Github/paper/experiments/train/binary/binary_categorical.R', echo=TRUE)
library(ade4)
install.packages()
install.packages("ade4")
library(ade4)
sample(c(0,1), 5)
sample(c(0,1), 5, r = TRUE)
a <- sample(c(0,1), 5, r = TRUE)
b <- sample(c(0,1), 5, r = TRUE)
a
b
dist.binary(df(a,b))
dist.binary()
?dist.binary
dist.binary(method = 1)
dist.binary(df(a,b), method = 1)
df(a,b)
dist.binary(data.frame(a,b), method = 1)
dist.binary(data.frame(a,b), method = 2)
dist.binary(data.frame(a,b), method = 3)
dist.binary(data.frame(a,b), method = 4)
dist.binary(data.frame(a,b), method = 5)
dist.binary(data.frame(a,b), method = 6)
dist.binary(data.frame(a,b), method = 7)
dist.binary(data.frame(a,b), method = 8)
dist.binary(data.frame(a,b), method = 9)
dist.binary(data.frame(a,b), method = 10)
?dist
?dist.binary
dist.binary(data.frame(a,b), method = 1)
a
b
as.matrix(dist.binary(data.frame(a,b), method = 1))
sapply(as.matrix(dist.binary(data.frame(a,b), method = 1)), sum)
apply(as.matrix(dist.binary(data.frame(a,b), method = 1)), 1, sum)
apply(as.matrix(dist.binary(data.frame(a,b), method = 1)), 1, ranking)
apply(as.matrix(dist.binary(data.frame(a,b), method = 1)), 1, consensus::ranking)
m <- as.matrix(dist.binary(data.frame(a,b), method = 1)
)
m
library(devtools)
noelia_github <- "e878f2287a4e84b518fc9f774edc221a769d43ec"
install_github("noeliarico/consensus",
subdir = "consensus",
auth_token = noelia_github,
force = TRUE)
library(consensus)
m
ranking(m[1,])
ranking(m[2,])
m <- as.matrix(dist.binary(data.frame(a,b), method = 2))
ranking(m[1,])
ranking(m[2,])
?dist.binary
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
# binary_categorical
fitControl <- trainControl(method = "cv", 2,
summaryFunction = multiClassSummary)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c("jaccard", "mc", "ss3"),
ties = c("randomly", "tthreshold"),
verbose = FALSE,
developer = FALSE)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
ties = c("randomly", "tthreshold"),
atttype = "categorical",
developer = FALSE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
# binary_categorical
fitControl <- trainControl(method = "cv", 2,
summaryFunction = multiClassSummary)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c("jaccard", "mc", "ss3"),
ties = c("randomly", "tthreshold"),
verbose = FALSE,
developer = FALSE)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
ties = c("randomly", "tthreshold"),
atttype = "categorical",
developer = FALSE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c("jaccard", "smc", "ss3"),
ties = c("randomly", "tthreshold"),
verbose = FALSE,
developer = FALSE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/experiments/train/binary/binary_categorical.R', echo=TRUE)
warnings()
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
fit_breast_cancer_d
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c("jaccard", "smc", "ss3"),
ties = c("randomly"), "tthreshold"),
verbose = FALSE,
developer = FALSE)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c("jaccard", "smc", "ss3"),
ties = c("randomly", "tthreshold"),
verbose = FALSE,
developer = FALSE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c("jaccard", "smc", "ss3"),
ties = c("randomly"),#, "tthreshold"),
verbose = FALSE,
developer = FALSE)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
ties = c("randomly"),#, "tthreshold"),
atttype = "custom",
developer = FALSE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
set.seed(123)
fit_breast_cancer_r <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
fit_breast_cancer_d
fit_breast_cancer_r
compare_F1 <- function(rdata, ddata) {
rdata <- rdata %>% select(k, rr, F1)
%>% mutate(method = rr, rr, NULL)
ddata <- rdata %>% select(k, distance, F1)
%>% mutate(method = distance, distance, NULL)
all_data <- bind_rows(rdata, ddata)
all_data
}
compare_F1 <- function(rdata, ddata) {
rdata <- rdata %>% select(k, rr, F1)
%>% mutate(method = rr, rr, NULL)
ddata <- rdata %>% select(k, distance, F1)
%>% mutate(method = distance, distance, NULL)
all_data <- bind_rows(rdata, ddata)
all_data
}
%>% mutate(method = rr, rr, NULL)
compare_F1 <- function(rdata, ddata) {
rdata <- rdata %>%
select(k, rr, F1) %>%
mutate(method = rr, rr, NULL)
ddata <- rdata %>%
select(k, distance, F1) %>%
mutate(method = distance, distance, NULL)
all_data <- bind_rows(rdata, ddata)
all_data
}
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_d$results)
compare_F1 <- function(rdata, ddata) {
rdata <- rdata %>%
select(k, rr, F1) %>%
mutate(method = rr, rr, NULL)
ddata <- ddata %>%
select(k, distance, F1) %>%
mutate(method = distance, distance, NULL)
all_data <- bind_rows(rdata, ddata)
all_data
}
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_d$results)
compare_F1 <- function(rdata, ddata) {
rdata <- rdata %>%
select(k, rr, F1) %>%
mutate(method = rr, rr = NULL)
ddata <- ddata %>%
select(k, distance, F1) %>%
mutate(method = distance, distance = NULL)
all_data <- bind_rows(rdata, ddata)
all_data
}
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_d$results)
compare_F1 <- function(rdata, ddata) {
rdata <- rdata %>%
select(k, rr, F1) %>%
mutate(method = rr, rr = NULL)
ddata <- ddata %>%
select(k, distance, F1) %>%
mutate(method = distance, distance = NULL)
all_data <- bind_rows(rdata, ddata)
ggplot(all_data, aes(F1, 1)) +
geom_point() +
facet_grid(~k)
}
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_d$results)
compare_F1 <- function(rdata, ddata) {
rdata <- rdata %>%
select(k, rr, F1) %>%
mutate(method = rr, rr = NULL)
ddata <- ddata %>%
select(k, distance, F1) %>%
mutate(method = distance, distance = NULL)
all_data <- bind_rows(rdata, ddata)
ggplot(all_data, aes(F1, 1)) +
geom_point(aes(color = method)) +
facet_grid(~k)
}
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_d$results)
cars <- as.data.frame(cars)
set.seed(123)
mini_cars <- createDataPartition(cars$class, p = 0.1, list = FALSE)
mini_cars <- cars[mini_cars, ]
set.seed(123)
fit_mini_cars_d <- train(
x =  mini_cars[, -7],
y = mini_cars[, 7],
data = mini_cars,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
fit_mini_cars_d
set.seed(123)
fit_mini_cars_r <- train(x =  mini_cars[,-7],
y = mini_cars[,7],
data = mini_cars,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid)
fit_mini_cars_d
fit_mini_cars_r
somerville <- as.data.frame(somerville)
set.seed(123)
fit_somerville_d <- train(
x =  somerville[, -1],
y = somerville[, 1],
data = somerville,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
set.seed(123)
fit_somerville_r <- train(
x =  somerville[, -1],
y = somerville[, 1],
data = somerville,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
fit_somerville_d
fit_somerville_r
tic_tac_toe <- as.data.frame(tic_tac_toe)
set.seed(123)
mini_tic_tac_toe <- createDataPartition(tic_tac_toe$class, p = 0.1, list = FALSE)
mini_tic_tac_toe <- tic_tac_toe[mini_tic_tac_toe,]
set.seed(123)
fit_mini_tic_tac_toe <- train(x =  mini_tic_tac_toe[,-10],
y = mini_tic_tac_toe[,10],
data = mini_tic_tac_toe,
method = dknn,
trControl = fitControl)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c("jaccard", "smc", "ss3"),
ties = c("randomly"),#, "tthreshold"),
verbose = FALSE,
developer = FALSE)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
ties = c("randomly"),#, "tthreshold"),
atttype = "custom",
developer = FALSE)
set.seed(123)
fit_mini_tic_tac_toe <- train(x =  mini_tic_tac_toe[,-10],
y = mini_tic_tac_toe[,10],
data = mini_tic_tac_toe,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
fit_mini_tic_tac_toe
set.seed(123)
fit_mini_tic_tac_toe_r <- train(x =  mini_tic_tac_toe[,-10],
y = mini_tic_tac_toe[,10],
data = mini_tic_tac_toe,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid)
fit_mini_tic_tac_toe
fit_mini_tic_tac_toe_r
compare_F1(fit_mini_tic_tac_toe_r$results, fit_mini_tic_tac_toe$results)
