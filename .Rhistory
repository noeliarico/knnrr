data = mini_cars,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid)
fit_mini_cars_d
fit_mini_cars_r
fit_mini_cars_d
somerville
somerville <- as.data.frame(somerville)
set.seed(123)
fit_somerville_d <- train(
x =  somerville[, -1],
y = somerville[, 1],
data = somerville,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
fit_somerville_d
set.seed(123)
fit_somerville_r <- train(
x =  somerville[, -1],
y = somerville[, 1],
data = somerville,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
fit_somerville_r
fit_somerville_d
fit_somerville_r
fit_somerville_d
breast_cancer
fit_breast_cancer_d
fit_breast_cancer_r
get_distances("categorical")
get_distances("categorical")
print(get_distances("categorical"))
c(get_distances("categorical"), "jaccard_add", "jaccard_avg")
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c(get_distances("categorical"), "jaccard_add", "jaccard_avg"),
ties = c("randomly", "ttreshold"),
verbose = FALSE,
developer = FALSE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
breast_cancer
fit_breast_cancer_d
results <- fit_breast_cancer_d
library(ggplot2)
results
ggplot(results, aes(x = k, y = F1, color = distance, shape = ties)) +
geom_point()
ggplot(results, aes(x = k, y = F1, color = distance)) +
geom_point()
ggplot(results, aes(x = k, y = F1)) +
geom_point(aes(color = distance, shape = ties))
sapply(results, class)
class(results)
results$results
ggplot(results$results, aes(x = k, y = F1)) +
geom_point(aes(color = distance, shape = ties), size = 5)
ggplot(results$results, aes(x = k, y = F1)) +
geom_point(aes(color = distance, shape = ties), size = 5, alpha = 0.5)
resultsr <- results
resultsd <- results
resultsr <- fit_breast_cancer_r$results
resultsr
ggplot(results$results, aes(x = k, y = F1)) +
geom_point(aes(color = distance, shape = ties), size = 5, alpha = 0.5) +
geom_point(data = resultsr, aes(color = distance, shape = ties), size = 5, alpha = 1)
resultsr
ggplot(results$results, aes(x = k, y = F1)) +
geom_point(aes(color = distance, shape = ties), size = 5, alpha = 0.5) +
geom_point(data = resultsr, aes(color = rr, shape = ties), size = 5, alpha = 1)
ggplot(results$results, aes(x = k, y = F1)) +
geom_point(aes(color = distance), size = 5, alpha = 0.5) +
geom_point(data = resultsr, aes(color = rr), size = 5, alpha = 1) +
facet_grid(~ties)
resultsr <- fit_breast_cancer_r
resultsd <- fit_breast_cancer_d
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), size = 5, alpha = 0.5) +
geom_point(data = resultsr, aes(color = rr), size = 5, alpha = 1) +
facet_grid(~ties)
resultsr <- fit_breast_cancer_r$results
resultsd <- fit_breast_cancer_d$results
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), size = 5, alpha = 0.5) +
geom_point(data = resultsr, aes(color = rr), size = 5, alpha = 1) +
facet_grid(~ties)
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), shape = 1, size = 5, alpha = 0.5) +
geom_point(data = resultsr, aes(color = rr), shape = 2, size = 5, alpha = 1) +
facet_grid(~ties)
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), shape = 11, size = 5, alpha = 0.5) +
geom_point(data = resultsr, aes(color = rr), shape = 12, size = 5, alpha = 1) +
facet_grid(~ties)
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), shape = 16, size = 5, alpha = 0.5) +
geom_point(data = resultsr, aes(color = rr), shape = 17, size = 5, alpha = 1) +
facet_grid(~ties)
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), shape = 16, size = 5, alpha = 0.5) +
#geom_point(data = resultsr, aes(color = rr), shape = 17, size = 5, alpha = 1) +
facet_grid(~ties)
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), shape = 16, size = 5, alpha = 0.1) +
geom_point(data = resultsr, aes(color = rr), shape = 17, size = 5, alpha = 1) +
facet_grid(~ties)
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), shape = 16, size = 5, alpha = 0.2) +
geom_point(data = resultsr, aes(color = rr), shape = 17, size = 5, alpha = 1) +
facet_grid(~ties)
fit_breast_cancer_d$call
fit_breast_cancer_d$resample
fit_breast_cancer_d$control$method
fit_breast_cancer_d$control$number
fit_breast_cancer_d$control$indexOut
fit_breast_cancer_r$control$indexOut
set.seed(123)
set.seed(123)
bank_note_d <- as.data.frame(bank_note)
train(
x =  bank_note[, -5],
y = bank_note[, 5],
data = bank_note,
method = dknn,
trControl = fitControl
)
fitControl <- trainControl(method = "cv", 2,
summaryFunction = multiClassSummary)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = get_distances("numerical"),
ties = c("randomly", "ttreshold"),
verbose = FALSE,
developer = FALSE)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
atttype = "numerical",
developer = FALSE,
verbose = FALSE)
set.seed(123)
set.seed(123)
bank_note_d <- as.data.frame(bank_note)
train(
x =  bank_note[, -5],
y = bank_note[, 5],
data = bank_note,
method = dknn,
trControl = fitControl,
dgrid
)
set.seed(123)
bank_note_d <- as.data.frame(bank_note)
train(
x =  bank_note[, -5],
y = bank_note[, 5],
data = bank_note,
method = dknn,
preProcess = c("center", "scale"),
trControl = fitControl,
tuneGrid = dgrid
)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
fitControl <- trainControl(method = "cv", 2,
summaryFunction = multiClassSummary)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = get_distances("numerical"),
ties = c("randomly", "ttreshold"),
verbose = FALSE,
developer = FALSE)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
atttype = "numerical",
developer = FALSE,
verbose = FALSE)
set.seed(123)
bank_note_d <- as.data.frame(bank_note)
bank_note_d <- train(
x =  bank_note[, -5],
y = bank_note[, 5],
data = bank_note,
method = dknn,
preProcess = c("center", "scale"),
trControl = fitControl,
tuneGrid = dgrid
)
bank_note_d
set.seed(123)
bank_note <- as.data.frame(bank_note)
bank_note_r <- train(
x =  bank_note[, -5],
y = bank_note[, 5],
data = bank_note,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
atttype = "numerical",
developer = FALSE,
verbose = FALSE)
set.seed(123)
bank_note <- as.data.frame(bank_note)
bank_note_r <- train(
x =  bank_note[, -5],
y = bank_note[, 5],
data = bank_note,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
ties = c("randomly", "ttreshold"),
atttype = "numerical",
verbose = FALSE)
bank_note_r <- train(
x =  bank_note[, -5],
y = bank_note[, 5],
data = bank_note,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
ties = c("randomly", "ttreshold"),
atttype = "numerical",
developer = FALSE)
set.seed(123)
bank_note <- as.data.frame(bank_note)
bank_note_r <- train(
x =  bank_note[, -5],
y = bank_note[, 5],
data = bank_note,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
mini_iris
mini_iris
set.seed(123)
indexes <- createDataPartition(iris$Species, times = 1, p = 0.08, list = FALSE)
mini_iris <- iris[indexes,]
mini_iris
breast_cancer
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
breast_cancer
breast_cancer
cars
cars
URL <- "http://archive.ics.uci.edu/ml/machine-learning-databases/00229/Skin_NonSkin.txt"
fit_breast_cancer_r
copy <- fit_breast_cancer_r
copyd <- fit_breast_cancer_d
source('~/Desktop/Github/paper/methods/rknn/knn4caret.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/knn4caret.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/knn4.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/knn4caret.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/dknn/dknn_train.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/dknn/dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/dist_make.R', echo=TRUE)
# binary_categorical
fitControl <- trainControl(method = "cv", 2,
summaryFunction = multiClassSummary)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c(get_distances("categorical"), "jaccard_add", "jaccard_avg"),
ties = c("randomly", "ttreshold"),
verbose = FALSE,
developer = FALSE)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
ties = c("randomly", "ttreshold"),
atttype = "categorical",
developer = FALSE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
# binary_categorical
fitControl <- trainControl(method = "cv", 2,
summaryFunction = multiClassSummary)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
distance = c(get_distances("categorical"), "jaccard_add", "jaccard_avg"),
ties = c("randomly", "tthreshold"),
verbose = FALSE,
developer = FALSE)
rgrid <-  expand.grid(k = c(1,2,3,5,7),
rr = c("plurality", "borda_count", "two", "three"),
ties = c("randomly", "tthreshold"),
atttype = "categorical",
developer = FALSE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
fit_breas_cancer
fit_breast_cancer_d_cancer
fit_breast_cancer_d
set.seed(123)
fit_breast_cancer_r <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
fit_breast_cancer_r
ggplot(resultsd, aes(x = k, y = F1)) +
geom_point(aes(color = distance), shape = 16, size = 5, alpha = 0.2) +
geom_point(data = resultsr, aes(color = rr), shape = 17, size = 5, alpha = 1) +
facet_grid(~ties)
r1 <- ranking(c(1, 4, 6, 2, 3, 4, 9, 7, 6, 1, 8))
r1
r1 <- ranking(c(1, 4, 6, 2, 3, 4, 9, 7, 6, 1, 8, 5))
r1
r1 <- ranking(c(1, 4, 6, 2, 3, 4, 9, 7, 6, 1, 8, 5))
r2 <- ranking(c(6, 4, 1, 3, 3, 8, 9, 7, 6, 5, 8, 2))
r1
e2
r2
chooseBest(r1, "randomly", 3)
v1 <- c(1, 4, 6, 2, 3, 4, 9, 7, 6, 1, 8, 5)
set.seed(123)
v1 <- c(1, 4, 6, 2, 3, 4, 9, 7, 6, 1, 8, 5)
names(v1) <- sample(c("circle", "square"), 12)
set.seed(123)
v1 <- c(1, 4, 6, 2, 3, 4, 9, 7, 6, 1, 8, 5)
names(v1) <- sample(c("circle", "square"), 12, replace = TRUE)
v1
r1 <- ranking(v1)
r1
source('~/Desktop/Github/paper/methods/dknn/dknn_train.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/dknn/dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/knn4caret.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/knn4.R', echo=TRUE)
breast_cancer <- as.data.frame(breast_cancer)
set.seed(123)
fit_breast_cancer_d <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
warnings()
fit_breast_cancer_d
fit_breast_cancer_r
bank_note
bank_note$class
bank_note
complete.cases(bank_note)
table(complete.cases(bank_note))
haberman
haberman$nodes
mini_iris
source('~/Desktop/Github/paper/methods/dknn/dknn_train.R', echo=TRUE)
breast_cancer
cars
mini_cars
somerville
set.seed(123)
fit_mini_cars_d <- train(
x =  mini_cars[, -7],
y = mini_cars[, 7],
data = mini_cars,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
source('~/Desktop/Github/paper/binary_categorical.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/chooseBest.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/dknn/dknn_train.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/dknn/dknn.R', echo=TRUE)
fit_mini_cars_d <- train(
x =  mini_cars[, -7],
y = mini_cars[, 7],
data = mini_cars,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid
)
source('~/Desktop/Github/paper/experiments/train.R', echo=TRUE)
warnings()
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid)
dgrid <-  expand.grid(k = c(1,2,3,5,7),
#distance = c(get_distances("categorical"), "jaccard_add", "jaccard_avg"),
distance = c(get_distances("numerical")),
ties = c("randomly", "tthreshold"),
verbose = FALSE,
developer = FALSE)
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid)
source('~/Desktop/Github/paper/methods/dknn/dknn_train.R', echo=TRUE)
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid)
source('~/Desktop/Github/paper/methods/dknn/dknn_train.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/dknn/dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/experiments/train.R', echo=TRUE)
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
dgrid <-  expand.grid(k = c(1,2,3),
#distance = c(get_distances("categorical"), "jaccard_add", "jaccard_avg"),
distance = c(get_distances("numerical")),
ties = c("randomly", "tthreshold"),
verbose = FALSE,
developer = FALSE)
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
source('~/Desktop/Github/paper/methods/rknn/chooseBest.R', echo=TRUE)
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
dgrid <-  expand.grid(k = c(1,2,3),
#distance = c(get_distances("categorical"), "jaccard_add", "jaccard_avg"),
distance = c(get_distances("numerical")),
ties = c("randomly", "tthreshold"),
verbose = FALSE,
developer = FALSE)
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
sink("output.txt")
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
sink()
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
sink("output.txt")
train(x =  mini_iris[,-5],
y = mini_iris[,5],
data = mini_iris,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid)
sink()
ranking
r1
print(r1)
