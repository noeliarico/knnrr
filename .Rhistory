compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(guide_legend(nrow = 1)) + theme(legend.position = "top")
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(guide_legend(ncol = 10)) + theme(legend.position = "top")
?guide_legend
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(col = guide_legend(nrow= 10)) + theme(legend.position = "top")
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(col = guide_legend(nrow= 10))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.key.width = 10)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.key.width = 10)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(col = guide_legend(ncol = 8))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top") + guides(col = guide_legend(ncol = 8))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.key.width = 10)
?unit
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.key.width = unit(0.5, "npc"))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.key.height = unit(1, "cm"), legend.key.width = unit(0.5, "npc"))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.key.height = unit(1, "cm"), legend.key.width = unit(0.5, "cm"))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.key.height = unit(1, "cm"), legend.key.width = unit(0.05, "npc"))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.position, legend.key.width = unit(0.05, "npc"))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.position, legend.key.width = unit(0.05, "npc")) + guides(col = guide_legend(ncol = 8))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.key.height = unit(1, "cm"), legend.key.width = unit(0.5, "cm")) + guides(col = guide_legend(ncol = 8))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.key.height = unit(1, "cm"), legend.key.width = unit(0.5, "cm")) + guides(col = guide_legend(nrow = 2, ncol = 8))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + theme(legend.position="top", legend.key.height = unit(1, "cm"), legend.key.width = unit(0.5, "cm")) + guides(col = guide_legend(nrow = 2))
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + reposition_legend('top', panel='panel-3-2')
library(ggplot2)
library(grid)
library(gridExtra)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + reposition_legend('top', panel='panel-3-2')
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) %>% reposition_legend('top', panel='panel-3-2')
library(ggplot2)
library(grid)
library(gridExtra)
library(lemon)
install.packages("lemon")
library(lemon)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) %>% reposition_legend('top', panel='panel-3-2')
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) %>% reposition_legend('top')
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_mini_bank_note_r, fit_mini_bank_note_d) + guides(fill=guide_legend(ncol=2))
source('~/Desktop/Github/paper/plot_all.R', echo=TRUE)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
num_binary <- c("mini_bank_note","haberman","mini_skin", "mini_weight_height", "vertebral_colum2")
num_multiclass <-c("filtered_ecoli", "iris", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast")
data_list <- num_binary
append_plot <- function(name) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_F1(paramr, paramd, name)
return(p)
}
all_plots <- lapply(data_list, append_plot)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
head(mini_skin)
source('~/Desktop/Github/paper/data/show_data.R', echo=TRUE)
head(mammograpic_masses)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/show_data.R', echo=TRUE)
plot_dist_cols(mammographic_masses)
mammographic_masses <- read_csv(file.path(path_to_data, "data/binary/mixed/lessthan10/mammographic_masses.csv"),
col_types = cols(.default = col_factor(NULL),
age = col_number()),
col_names = c("bi_rads",
"age",
"shape",
"margin",
"density",
"severity"),
na = "?") %>% drop_na
mammographic_masses
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
path_to_data <- ".."
source("../data/load_data.R")
source("../data/show_data.R")
knitr::opts_chunk$set(out.width="100%")
rm(breast_cancer)
source("load.R")
source("data/load_data.R")
rm(path_to_data)
source("data/load_data.R")
breast_cancer
head(caesarian)
sapply(caesarean, class)
sapply(caesarian, class)
caesarian
sapply(caesarian, class)
sapply(caesarian, is.facet)
sapply(caesarian, is.factor)
any(sapply(caesarian, is.factor))
predict(dummyVars(~.,caesarian), caesarian)
head(predict(dummyVars(~.,caesarian), caesarian))
head(caesarian)
sapply(caesarian, unique)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
nrow(caesarian)
head(caesarian)
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
set.seed(123)
fit_mini_bank_note_r <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = rknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = rgrid_mix
)
source('~/Desktop/Github/paper/distances/sets.R', echo=TRUE)
source('~/Desktop/Github/paper/experiments/experiments_setup.R', echo=TRUE)
source('~/Desktop/Github/paper/binary_mixed.R', echo=TRUE)
warnings()
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
fit_mini_bank_note_r <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = rknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = rgrid_mix
)
fit_caesarian_d
fit_caesarian_r
set.seed(123)
fit_caesarian_r <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = rknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = rgrid_mix
)
fit_caesarian_r
num_binary <- c("mini_bank_note","haberman","mini_skin", "mini_weight_height", "vertebral_colum2")
num_multiclass <-c("filtered_ecoli", "iris", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast")
mixed_binary <- c("caesarian")
data_list <- mixed_binary
append_plot <- function(name) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_F1(paramr, paramd, name)
return(p)
}
all_plots <- lapply(data_list, append_plot)
fit_caesarian_d
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
fit_caesarian_d
source('~/Desktop/Github/paper/plot_all.R', echo=TRUE)
figure
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
source('~/Desktop/Github/paper/plot_all.R', echo=TRUE)
figure
append_plot_ties <- function(name) {
paramr <- get(paste0("fit_", name, "_d"))
p <- compare_ties(paramd$results)
return(p)
}
all_plots <- lapply(data_list, append_plot_ties)
compare_ties
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
source('~/Desktop/Github/paper/distances/sets.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
set.seed(123)
fit_caesarian_r <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = rknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = rgrid_mix
)
head(mammographic_masses)
sapply(mammographic_masses, unique)
source('~/Desktop/Github/paper/binary_mixed.R', echo=TRUE)
source('~/Desktop/Github/paper/plot_all.R', echo=TRUE)
source('~/Desktop/Github/paper/plot_all.R', echo=TRUE)
figure
sample(1:3, 5, replace = T)
a <- sample(1:3, 5, replace = T)
b <- sample(1:3, 5, replace = T)
tibble(a, b)
tribble(a, b)
tribble(~a, ~b, a, b)
tribble(~a, ~b, ~c, ~e, ~d, a, b)
a
b
tribble(~a, ~b, ~c, ~e, ~d, a, b)
matrix(a, b, ncol = 5)
data <- matrix(a, b, ncol = 5)
dist(data, method = "maximum")
nrow(mammographic_masses)
a <- sample(1:10, 5, replace = T)
b <- sample(1:10, 5, replace = T)
data <- matrix(a, b, ncol = 5)
dist(data, method = "maximum")
a
b
data
a
b
data <- matrix(a, b, ncol = 5, nrow = 2)
data
dist(data, method = "maximum")
data <- matrix(a, b, ncol = 5, byrow = T)
daa
data
a
b
data <- matrix(c(a, b) ncol = 5, byrow = T)
data <- matrix(c(a, b), ncol = 5, byrow = T)
data
dist(data, method = "maximum")
head(mammographic_masses)
mammographic_masses <- as.data.frame(mammographic_masses)
sapply(mammographic_masses, class)
set.seed(123)
fit_mammographic_masses_d <- train(
x =  mammographic_masses[, -6],
y = mammographic_masses[, 6],
data = mammographic_masses,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
fit_mammographic_masses_d
set.seed(123)
fit_mammographic_masses_r <- train(
x =  mammographic_masses[, -6],
y = mammographic_masses[, 6],
data = mammographic_masses,
method = rknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = rgrid_mix
)
nrow(mammographic_masses)
mammographic_masses <- as.data.frame(mammographic_masses)
set.seed(123)
mini_mammographic_masses <- createDataPartition(mammographic_masses$severity, p = 0.25, list = FALSE)
mini_mammographic_masses <- mammographic_masses[mini_mammographic_masses,]
set.seed(123)
fit_mammographic_masses_d <- train(
x =  mammographic_masses[, -6],
y = mammographic_masses[, 6],
data = mammographic_masses,
method = dknn,
preProcess = c("center", "scale", "range"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
warnings()
set.seed(123)
fit_mammographic_masses_d <- train(
x =  mammographic_masses[, -6],
y = mammographic_masses[, 6],
data = mammographic_masses,
method = dknn,
preProcess = c("range"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
set.seed(123)
fit_mammographic_masses_r <- train(
x =  mammographic_masses[, -6],
y = mammographic_masses[, 6],
data = mammographic_masses,
method = rknn,
preProcess = c("range"),
trControl = binary_fitControl,
tuneGrid = rgrid_mix
)
source('~/Desktop/Github/paper/binary_mixed.R', echo=TRUE)
num_binary <- c("mini_bank_note","haberman","mini_skin", "mini_weight_height", "vertebral_colum2")
num_multiclass <-c("filtered_ecoli", "iris", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast")
mixed_binary <- c("caesarian", "mammographic_masses")
data_list <- mixed_binary
append_plot <- function(name) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_F1(paramr, paramd, name)
return(p)
}
all_plots <- lapply(data_list, append_plot)
mixed_binary <- c("caesarian", "mini_mammographic_masses")
data_list <- mixed_binary
append_plot <- function(name) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_F1(paramr, paramd, name)
return(p)
}
all_plots <- lapply(data_list, append_plot)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
source('~/Desktop/Github/paper/distances/sets.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/sets.R', echo=TRUE)
source('~/Desktop/Github/paper/experiments/experiments_setup.R', echo=TRUE)
set.seed(123)
mini_mammographic_masses <- createDataPartition(mammographic_masses$severity, p = 0.25, list = FALSE)
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
set.seed(123)
fit_caesarian_r <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = rknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = rgrid_mix
)
fit_caesarian_d
scaesarian <- caesarian[1:2,]
scaesarian
sapply(scaesarian, class)
daisy(scaesarian, metric = "gower")
as.matrix(daisy(scaesarian, metric = "gower"))
scaesarian <- caesarian[1:5,]
as.matrix(daisy(scaesarian, metric = "gower"))
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/experiments/experiments_setup.R', echo=TRUE)
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
warnings()
predict(dummyVars(~.,caesarian[, -6]), caesarian)
head(predict(dummyVars(~.,caesarian[, -6]), caesarian))
scaesarian <- head(predict(dummyVars(~.,caesarian[, -6]), caesarian))
sapply(scaesarian, class)
head(caesarian)
sapply(caesarian, class)
daisy(caesarian, metric = "gower")
as.matrix(daisy(caesarian, metric = "gower"))
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
warnings()
head(caesarian)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
warnings()
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
caesarian$Age
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
caesarian$Age
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
fit_caesarian_d
set.seed(123)
fit_caesarian_r <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = rknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = rgrid_mix
)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
set.seed(123)
fit_caesarian_d <- train(
x =  caesarian[, -6],
y = caesarian[, 6],
data = caesarian,
method = dknn,
preProcess = c("center", "scale"),
trControl = binary_fitControl,
tuneGrid = dgrid_mix
)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/plot_all.R', echo=TRUE)
figure
fit_caesarian_d
source('~/Desktop/Github/paper/binary_mixed.R', echo=TRUE)
source('~/Desktop/Github/paper/plot_all.R', echo=TRUE)
figure
?daisy
?daisy
