library(ade4)
library(caret)
library(cluster)
library(devtools)
library(foreign)
library(GGally)
library(ggplot2)
library(ggpubr)
library(nnet)
library(parallel)
library(tidyverse)
library(usedist)
all_plots <- lapply(data_list, append_plot_ties)
append_plot_ties <- function(name) {
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_ties(paramd$results)
return(p)
}
all_plots <- lapply(data_list, append_plot_ties)
compare_ties
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
cat_binary <- c("balance_scale", "breast_cancer", "mini_cars", "somerville", "mini_tic_tac_toe")
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots <- all_plots_cat_binary
all_plots <- lapply(data_list, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_plots <- all_plots_cat_binary
cat_binary <- c("balance_scale", "breast_cancer", "mini_cars", "somerville", "mini_tic_tac_toe")
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
all_plots <- lapply(all_plots_cat_binary, append_plot_ties)
data_list
all_plots <- lapply(cat_binary, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_plots <- lapply(cat_multiclass, append_plot_ties)
append_plot_ties <- function(name) {
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_ties(paramd$results)
return(p)
}
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
append_plot_ties <- function(name) {
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_ties(paramd$results)
return(p)
}
all_plots <- lapply(mix_binary, append_plot_ties)
figure
all_plots <- lapply(mix_binary, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
mix_binary <- c("caesarian", "mini_mammographic_masses", "statlog", "primary_tumor")
all_plots <- lapply(mix_binary, append_plot_ties)
fit_primary_tumor_d
head(primary_tumor)
sapply(primary_tumor, unique)
nrow(primary_tumor)
set.seed(123)
fit_primary_tumor_d <- train(x =  primary_tumor[,-18],
y = primary_tumor[,8],
data = primary_tumor,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
set.seed(123)
primary_tumor <- as.data.frame(primary_tumor)
set.seed(123)
fit_primary_tumor_d <- train(x =  primary_tumor[,-18],
y = primary_tumor[,18],
data = primary_tumor,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_primary_tumor_d
set.seed(123)
fit_primary_tumor_r <- train(x =  primary_tumor[,-18],
y = primary_tumor[,18],
data = primary_tumor,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
warnings()
library(consensus)
e
e
set.seed(123)
fit_primary_tumor_r <- train(x =  primary_tumor[,-18],
y = primary_tumor[,18],
data = primary_tumor,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
all_plots <- lapply(mix_binary, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
mix_multiclass <- c("chess")
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
all_plots <- lapply(mix_binary, append_plot_ties)
compare_ties
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_plots <- lapply(mix_multiclass, append_plot_ties)
mix_multiclass <- c("mini_chess")
all_plots <- lapply(mix_multiclass, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
fit_poker_hand_ds
head(post_operative)
fit_acute_inflammations1_d
mix_multiclass <- c("mini_chess", "acute_inflammations1", "acute_inflammations2")
all_plots <- lapply(mix_multiclass, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
compare_ties
all_plots <- all_plots_cat_binary
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
all_plots <- lapply(mix_multiclass, append_plot_ties)
mix_multiclass <- c("mini_chess", "acute_inflammations1", "acute_inflammations2")
all_plots <- lapply(mix_multiclass, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
mix_multiclass <- c("acute_inflammations1", "acute_inflammations2", "teaching_assistant")
all_plots <- lapply(mix_multiclass, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
mix_multiclass <- c("acute_inflammations1", "acute_inflammations2", "teaching_assistant", "contraceptive")
all_plots <- lapply(mix_multiclass, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
append_plot <- function(name, metric) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_metric(paramr, paramd, metric, name)
return(p)
}
num_binary <- c("mini_bank_note","haberman","mini_skin", "mini_weight_height", "vertebral_column2")
num_multiclass <-c("filtered_ecoli", "iris", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast")
mix_binary <- c("caesarian", "mini_mammographic_masses", "statlog", "primary_tumor")
mix_multiclass <- c("acute_inflammations1", "acute_inflammations2", "teaching_assistant", "contraceptive")
cat_binary <- c("balance_scale", "breast_cancer", "mini_cars", "somerville", "mini_tic_tac_toe", "mini_chess")
cat_multiclass <- c("post_operative", "mini_connect4","soybean_large", "zoo")
all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots_mix_binary <- lapply(mix_binary, append_plot, metric = "F1")
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
mix_multiclass <- c("acute_inflammations1", "acute_inflammations2", "teaching_assistant", "contraceptive")
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
mix_multiclass <- c("acute_inflammations1")#
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
fit_acute_inflammations1_d
fit_caesarian_d
mix_binary <- c("acute_inflammations1", "acute_inflammations2", "caesarian", "mini_mammographic_masses", "statlog", "primary_tumor")
mix_multiclass <- c("teaching_assistant", "contraceptive")
all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots_mix_binary <- lapply(mix_binary, append_plot, metric = "F1")
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
append_plot <- function(name, metric) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_metric(paramr, paramd, metric, name)
return(p)
}
num_binary <- c("mini_bank_note","haberman","mini_skin", "mini_weight_height", "vertebral_column2")
num_multiclass <-c("filtered_ecoli", "iris", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast")
mix_binary <- c("acute_inflammations1", "acute_inflammations2", "caesarian", "mini_mammographic_masses", "statlog", "primary_tumor")
mix_multiclass <- c("teaching_assistant", "contraceptive")
cat_binary <- c("balance_scale", "breast_cancer", "mini_cars", "somerville", "mini_tic_tac_toe", "mini_chess")
cat_multiclass <- c("post_operative", "mini_connect4","soybean_large", "zoo")
all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots_mix_binary <- lapply(mix_binary, append_plot, metric = "F1")
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
all_plots <- list(all_plots_num_binary, all_plots_num_multiclass,
all_plots_cat_binary, all_plots_cat_multiclass,
all_plots_cat_binary, all_plots_cat_multiclass)
all <- list(
all_plots_num_binary,
all_plots_num_multiclass,
all_plots_cat_binary,
all_plots_cat_multiclass,
all_plots_cat_binary,
all_plots_cat_multiclass
)
all_plots <- lapply(all, append_plot_ties)
all <- list(
all_plots_num_binary, all_plots_num_multiclass,
all_plots_cat_binary, all_plots_cat_multiclass,
all_plots_cat_binary, all_plots_cat_multiclass
)
all_plots <- lapply(all, append_plot_ties)
append_plot <- function(name, metric) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_metric(paramr, paramd, metric, name)
return(p)
}
num_binary <- c("mini_bank_note","haberman","mini_skin", "mini_weight_height", "vertebral_column2")
num_multiclass <-c("filtered_ecoli", "iris", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast")
mix_binary <- c("acute_inflammations1", "acute_inflammations2", "caesarian", "mini_mammographic_masses", "statlog", "primary_tumor")
mix_multiclass <- c("teaching_assistant", "contraceptive")
cat_binary <- c("balance_scale", "breast_cancer", "mini_cars", "somerville", "mini_tic_tac_toe", "mini_chess")
cat_multiclass <- c("post_operative", "mini_connect4","soybean_large", "zoo")
all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots_mix_binary <- lapply(mix_binary, append_plot, metric = "F1")
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
all_plots <- list(
all_plots_num_binary, all_plots_num_multiclass,
all_plots_cat_binary, all_plots_cat_multiclass,
all_plots_cat_binary, all_plots_cat_multiclass
)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
figure
length(all_plots)
all_plots
unlist(all_plots)
#library(ggpubr)
figure <- ggarrange(plotlist = unlist(all_plots), common.legend = TRUE)
all_data <- list(
num_binary, num_multiclass,
mix_binary, mix_multiclass,
cat_binary, cat_multiclass
)
all_plots <- lapply(all_data, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_data
unlist(all_data)
all_data <- c(
num_binary, num_multiclass,
mix_binary, mix_multiclass,
cat_binary, cat_multiclass
)
all_plots <- lapply(all_data, append_plot_ties)
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_plots <- all_plots_cat_binary
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_data <- c(
num_binary, num_multiclass,
mix_binary, mix_multiclass,
cat_binary, cat_multiclass
)
append_plot <- function(name, metric) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_metric(paramr, paramd, metric, name)
return(p)
}
all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots_mix_binary <- lapply(mix_binary, append_plot, metric = "F1")
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
all_plots <- all_plots_cat_binary
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
head(somerville)
all_plots <- all_plots_cat_multiclass
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
source('~/Desktop/Github/knnrr/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/knnrr/distances/distance_nominal.R', echo=TRUE)
balance_scale <- as.data.frame(balance_scale) %>% filter(class == "L" | class == "R") %>% droplevels()
set.seed(123)
fit_balance_scale_d <- train(x =  balance_scale[,-1],
y = balance_scale[,1],
data = balance_scale,
method = dknn,
trControl = binary_fitControl,
tuneGrid = dgrid_cat)
warmings()
warnings()
source('~/Desktop/Github/knnrr/distances/custom_distances.R', echo=TRUE)
balance_scale <- as.data.frame(balance_scale) %>% filter(class == "L" | class == "R") %>% droplevels()
set.seed(123)
fit_balance_scale_d <- train(x =  balance_scale[,-1],
y = balance_scale[,1],
data = balance_scale,
method = dknn,
trControl = binary_fitControl,
tuneGrid = dgrid_cat)
warnings()
source('~/Desktop/Github/knnrr/distances/distance_nominal.R', echo=TRUE)
head(balance_scale)
sapply(balance_scale, class)
source('~/Desktop/Github/knnrr/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/knnrr/distances/distance_nominal.R', echo=TRUE)
balance_scale <- as.data.frame(balance_scale) %>% filter(class == "L" | class == "R") %>% droplevels()
set.seed(123)
fit_balance_scale_d <- train(x =  balance_scale[,-1],
y = balance_scale[,1],
data = balance_scale,
method = dknn,
trControl = binary_fitControl,
tuneGrid = dgrid_cat)
warnings()
?dist_make
source('~/Desktop/Github/knnrr/distances/dist_make.R', echo=TRUE)
balance_scale <- as.data.frame(balance_scale) %>% filter(class == "L" | class == "R") %>% droplevels()
set.seed(123)
fit_balance_scale_d <- train(x =  balance_scale[,-1],
y = balance_scale[,1],
data = balance_scale,
method = dknn,
trControl = binary_fitControl,
tuneGrid = dgrid_cat)
fit_balance_scale_d
all_plots <- lapply(all_data, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_plots <- lapply(all_plots_cat_binary, append_plot_ties)
all_plots <- lapply(cat_binary, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
fit_balance_scale_d
source('~/Desktop/Github/knnrr/compare_ties.R', echo=TRUE)
all_plots <- lapply(cat_binary, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
source('~/Desktop/Github/knnrr/compare_ties.R', echo=TRUE)
figure
all_plots <- lapply(cat_binary, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
cat_binary <- c("balance_scale", "breast_cancer", "mini_cars", "somerville", "mini_tic_tac_toe", "mini_chess")
all_plots <- lapply(cat_binary, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
all_plots <- lapply("balance_scale", append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
fit_balance_scale_d
source('~/Desktop/Github/knnrr/compare_ties.R', echo=TRUE)
all_plots <- lapply(cat_binary, append_plot_ties)
fit_balance_scale_d
source('~/Desktop/Github/knnrr/compare_ties.R', echo=TRUE)
all_plots <- lapply("balance_scale", append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_plots <- lapply(cat_binary, append_plot_ties)
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
cat_binary <- c("balance_scale", "breast_cancer", "mini_cars", "somerville", "mini_tic_tac_toe")#, "mini_chess")
all_plots <- lapply(cat_binary, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
source('~/Desktop/Github/knnrr/compare_ties.R', echo=TRUE)
all_plots <- lapply(cat_binary, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_plots <- lapply(all, append_plot_ties)
all_data <- c(
num_binary, num_multiclass,
mix_binary, mix_multiclass,
cat_binary, cat_multiclass
)
rm(all)
all_plots <- lapply(all_data, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
all_plots
all_plots
figure
source('~/Desktop/Github/knnrr/compare_ties.R', echo=TRUE)
append_plot_ties <- function(name) {
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_ties(paramd$results, metric = "Kappa", name = name)
return(p)
}
all_plots <- lapply(all_data, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
source('~/Desktop/Github/knnrr/compare_ties.R', echo=TRUE)
all_plots <- lapply(all_data, append_plot_ties)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
head(haberman)
source('~/Desktop/Github/knnrr/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/knnrr/distances/sets.R', echo=TRUE)
balance_scale <- as.data.frame(balance_scale) %>% filter(class == "L" | class == "R") %>% droplevels()
set.seed(123)
fit_balance_scale_d <- train(x =  balance_scale[,-1],
y = balance_scale[,1],
data = balance_scale,
method = dknn,
trControl = binary_fitControl,
tuneGrid = dgrid_cat)
fit_balance_scale_d
source('~/Desktop/Github/knnrr/distances/sets.R', echo=TRUE)
source('~/Desktop/Github/knnrr/experiments/experiments_setup.R', echo=TRUE)
source('~/Desktop/Github/knnrr/experiments/train/binary/binary_categorical.R', echo=TRUE)
balance_scale <- as.data.frame(balance_scale) %>% filter(class == "L" | class == "R") %>% droplevels()
set.seed(123)
fit_balance_scale_d <- train(x =  balance_scale[,-1],
y = balance_scale[,1],
data = balance_scale,
method = dknn,
trControl = binary_fitControl,
tuneGrid = dgrid_cat)
source('~/Desktop/Github/knnrr/experiments/train/binary/binary_categorical.R', echo=TRUE)
warnings()
append_plot <- function(name, metric) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_metric(paramr, paramd, metric, name)
return(p)
}
all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots_mix_binary <- lapply(mix_binary, append_plot, metric = "F1")
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
all_plots <- all_plots_cat_multiclass
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
all_plots <- all_plots_cat_binary
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
figure
compare_ties <- function(data, metric, name = "") {
data <- data %>% select(k, distance, ties, {{metric}})
head(data)
tryCatch({
ggplot(data, aes_string("k", metric, color = "ties")) +
geom_point() +
facet_grid(~distance) +
ggtitle(name)
})
}
num_binary <- c("mini_bank_note","haberman","mini_skin", "mini_weight_height", "vertebral_column2")
num_multiclass <-c("filtered_ecoli", "iris", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast")
mix_binary <- c("acute_inflammations1", "acute_inflammations2", "caesarian", "mini_mammographic_masses", "statlog", "primary_tumor")
mix_multiclass <- c("teaching_assistant", "contraceptive")
cat_binary <- c("balance_scale", "breast_cancer", "mini_cars", "somerville", "mini_tic_tac_toe")#, "mini_chess")
cat_multiclass <- c("post_operative", "mini_connect4","soybean_large", "zoo")
all_data <- c(
num_binary, num_multiclass,
mix_binary, mix_multiclass,
cat_binary, cat_multiclass
)
append_plot <- function(name, metric) {
paramr <- get(paste0("fit_", name, "_r"))
paramd <- get(paste0("fit_", name, "_d"))
p <- compare_metric(paramr, paramd, metric, name)
return(p)
}
all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
all_plots_cat_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots_mix_binary <- lapply(mix_binary, append_plot, metric = "F1")
all_plots_mix_multiclass <- lapply(mix_multiclass, append_plot, metric = "Mean_F1")
all_plots <- all_plots_cat_binary
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
fit_balance_scale_d
head(somerville)
sapply(somerville, class)
sapply(somerville, class)
sapply(somerville, unique)
sapply(balance_scale, unique)
sapply(breast_cancer, unique)
head(somerville)
fit_balance_scale_d
data <- tribble(~color, ~doors, ~wheels,
"red", 5, "winter")
data
data <- tribble(~color, ~doors, ~wheels,
"red", 2, "winter",
"red", 5, "winter"
)
apply(data, 1, function(x) x == data)
source('~/Desktop/Github/knnrr/distances/sets.R', echo=TRUE)
source('~/Desktop/Github/knnrr/distances/sets.R', echo=TRUE)
source('~/Desktop/Github/knnrr/experiments/experiments_setup.R', echo=TRUE)
source('~/Desktop/Github/knnrr/experiments/train/multiclass/multiclass_categorical.R', echo=TRUE)
