trControl = multi_fitControl,
tuneGrid = dgrid_num
)
fit_iris_d
set.seed(123)
fit_iris_r <- train(
x =  iris[, -5],
y = iris[, 5],
data = iris,
method = rknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = rgrid_num
)
fit_iris_d
fit_iris_r
compare_F1(fit_iris_r$results, fit_iris_d$results)
life_expectancy
life_expectancy <- data.frame(life_expectancy)
set.seed(123)
fit_life_expectancy_d <- train(
x =  life_expectancy[, -4],
y = life_expectancy[, 4],
data = life_expectancy,
method = dknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = dgrid_num
)
set.seed(123)
fit_life_expectancy_r <- train(
x =  life_expectancy[, -4],
y = life_expectancy[, 4],
data = life_expectancy,
method = rknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = rgrid_num
)
fit_seeds_d
fit_life_expectancy_r
fit_life_expectancy_d
compare_F1(fit_life_expectancy_r$results, fit_life_expectancy_d$results)
seeds
seeds <- data.frame(seeds)
set.seed(123)
fit_seeds_d <- train(
x =  seeds[, -8],
y = seeds[, 8],
data = seeds,
method = dknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = dgrid_num
)
seeds <- data.frame(seeds)
set.seed(123)
fit_seeds_d <- train(
x =  seeds[, -8],
y = seeds[, 8],
data = seeds,
method = dknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = dgrid_num
)
head(seeds)
class(seeds)
sapply(seeds, class)
seeds$class <- as.factor(seeds$class)
table(seeds$class)
set.seed(123)
fit_seeds_d <- train(
x =  seeds[, -8],
y = seeds[, 8],
data = seeds,
method = dknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = dgrid_num
)
fit_seeds_d
set.seed(123)
fit_seeds_r <- train(
x =  seeds[, -8],
y = seeds[, 8],
data = seeds,
method = rknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = rgrid_num
)
fit_seeds_r
fit_seeds_d
compare_F1(fit_seeds_r$results, fit_seeds_d$results)
vertebral_colum3
head(vertebral_colum3)
fit_vertebral_colum3_d <- train(
x =  vertebral_colum3[, -7],
y = vertebral_colum3[, 7],
data = vertebral_colum3,
method = dknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = dgrid_num
)
set.seed(123)
fit_vertebral_colum3_r <- train(
x =  vertebral_colum3[, -7],
y = vertebral_colum3[, 7],
data = vertebral_colum3,
method = rknn,
preProcess = c("center", "scale"),
trControl = multi_fitControl,
tuneGrid = rgrid_num
)
compare_F1(fit_vertebral_colum3_r$results, fit_vertebral_colum3_d$results)
compare_ties(fit_bank_note_d)
compare_ties(fit_bank_note_d$results)
compare_ties(fit_breast_cancer_d$results)
compare_ties(fit_ecoli_d$results)
compare_ties(fit_haberman_d$results)
compare_ties(fit_iris_d$results)
compare_ties(fit_life_expectancy_d$results)
compare_ties(fit_vertebral_colum3_d$results)
compare_ties(fit_vertebral_colum2_d$results)
compare_ties(fit_seeds_d
)
compare_ties(fit_seeds_d$results)
set.seed(123)
b <- as.data.frame(model.matrix(~., breast_cancer)[,-1])
b
fit_breast_cancer_b <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
b[,1] <- factor(b[,1])
set.seed(123)
fit_breast_cancer_b <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
fit_breast_cancer_b
set.seed(123)
fit_breast_cancer_r <- train(
x =  breast_cancer[, -1],
y = breast_cancer[, 1],
data = breast_cancer,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
set.seed(123)
fit_breast_cancer_r <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
fit_breast_cancer_b
fit_breast_cancer_r
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_b$results)
source('~/Desktop/Github/paper/view_rsults.R', echo=TRUE)
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_b$results)
b
breast_cancer(b)
head(b)
head(b)
head(breast_cancer)
unique(breast_cancer$age)
dummyVars(~., breast_cancer)
predict(dummyVars(~., breast_cancer), breast_cancer)
predict(dummyVars(class ~., breast_cancer), breast_cancer)
breast_cancer
predict(dummyVars(class ~., breast_cancer), breast_cancer)
?dummyVars
breast_cancer <- as.data.frame(breast_cancer)
predict(dummyVars(class ~., breast_cancer), breast_cancer)
predict(dummyVars(class ~., breast_cancer), breast_cancer)
predict(dummyVars("class" ~., breast_cancer), breast_cancer)
predict(dummyVars(~., breast_cancer), breast_cancer)
head(predict(dummyVars(~., breast_cancer), breast_cancer))
head(predict(dummyVars(~., breast_cancer), breast_cancer))
unique(breast_cancer$age)
unique(breast_cancer$menopause)
b <- as.data.frame(model.matrix(~., breast_cancer)[,-1])
b[,1] <- factor(b[,1])
b <- predict(dummyVars(~., breast_cancer[,-1]), breast_cancer[,-1])
b <- cbind(breast_cancer[1,], b)
b
fit_breast_cancer_b <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
b <- predict(dummyVars(~., breast_cancer[,-1]), breast_cancer[,-1])
breast_cancer[1,]
breast_cancer[,1]
b <- predict(dummyVars(~., breast_cancer[,-1]), breast_cancer[,-1])
b <- cbind(breast_cancer[,1], b)
head(b)
b <- predict(dummyVars(~., breast_cancer[,-1]), breast_cancer[,-1])
b <- cbind(class = breast_cancer[,1], b)
head(b)
set.seed(123)
fit_breast_cancer_b <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
b$class <- as.factor(b$class)
b <- predict(dummyVars(~., breast_cancer[,-1]), breast_cancer[,-1])
b <- cbind(class = breast_cancer[,1], b)
class(b)
b <- predict(dummyVars(~., breast_cancer[,-1]), breast_cancer[,-1])
b <- as.data.frame(cbind(class = breast_cancer[,1], b))
b$class <- as.factor(b$class)
head(b)
set.seed(123)
fit_breast_cancer_b <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
fit_breast_cancer_b
set.seed(123)
fit_breast_cancer_r <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_b$results)
#b <- predict(dummyVars(~., breast_cancer[,-1]), breast_cancer[,-1])
#b <- as.data.frame(cbind(class = breast_cancer[,1], b))
b <- model.matrix(~., breast_cancer)[,-1]
b$class <- as.factor(b$class)
head(b)
sapply(b, class)
b$classrecurrence-events <- as.factor(b$classrecurrence-events)
b <- as.data.frame(b)
b$classrecurrence-events <- as.factor(b$classrecurrence-events)
#b <- predict(dummyVars(~., breast_cancer[,-1]), breast_cancer[,-1])
#b <- as.data.frame(cbind(class = breast_cancer[,1], b))
b <- model.matrix(~., breast_cancer)[,-1]
b <- as.data.frame(b)
b[,1] <- as.factor(b[,1])
set.seed(123)
fit_breast_cancer_b <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
set.seed(123)
fit_breast_cancer_r <- train(
x =  b[, -1],
y = b[, 1],
data = b,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid
)
compare_F1(fit_breast_cancer_r$results, fit_breast_cancer_b$results)
cars
cars[,-class]
cars[,-"class"]
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars
cars <- as.data.frame(cars)
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars <- cbind(ncars, class = cats[,7])
ncars <- cbind(ncars, class = cars[,7])
head(ncars)
set.seed(123)
rame(cars)
cars <- as.data.frame(cars)
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars <- cbind(class = cars[,7], ncars)
head(ncars)
cars <- as.data.frame(cars)
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars <- cbind(class = cars[,7], ncars)
set.seed(123)
mini_ncars <- createDataPartition(ncars$class, p = 0.1, list = FALSE)
mini_ncars <- cars[mini_ncars, ]
set.seed(123)
fit_mini_ncars_d <- train(
x =  mini_ncars[, -1],
y = mini_ncars[, 1],
data = mini_ncars,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
set.seed(123)
mini_ncars <- createDataPartition(ncars$class, p = 0.1, list = FALSE)
cars <- as.data.frame(cars)
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars <- cbind(class = cars[,7], ncars)
ncars$class <- as.factor(ncars)
cars <- as.data.frame(cars)
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars <- cbind(class = cars[,7], ncars)
head(ncars)
ncars <- as.data.frame(cbind(class = cars[,7], ncars))
ncars$class <- as.factor(ncars)
cars <- as.data.frame(cars)
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars <- as.data.frame(cbind(class = cars[,7], ncars))
ncars$class <- as.factor(ncars$class)
set.seed(123)
mini_ncars <- createDataPartition(ncars$class, p = 0.1, list = FALSE)
mini_ncars <- cars[mini_ncars, ]
set.seed(123)
fit_mini_ncars_d <- train(
x =  mini_ncars[, -1],
y = mini_ncars[, 1],
data = mini_ncars,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
warnings()
head(ncars)
sapply(class, ncars)
cars <- as.data.frame(cars)
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars <- as.data.frame(cbind(class = cars[,7], ncars))
ncars$class <- as.factor(ncars$class)
sapply(ncars, class)
set.seed(123)
mini_ncars <- createDataPartition(ncars$class, p = 0.1, list = FALSE)
mini_ncars <- cars[mini_ncars, ]
head(mini_cars)
head(mini_ncars)
set.seed(123)
mini_ncars <- createDataPartition(ncars$class, p = 0.1, list = FALSE)
mini_ncars <- ncars[mini_ncars, ]
head(mini_ncars)
set.seed(123)
fit_mini_ncars_d <- train(
x =  mini_ncars[, -1],
y = mini_ncars[, 1],
data = mini_ncars,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
fit_mini_ncars_d
table(mini_ncars$class)
table(cars$class)
head(cars)
cars <- as.data.frame(cars)
ncars <- predict(dummyVars(~., cars[,-7]), cars[,-7])
ncars <- as.data.frame(cbind(class = cars[,7], ncars))
ncars$class <- as.factor(ncars$class)
set.seed(123)
mini_ncars <- createDataPartition(ncars$class, p = 0.1, list = FALSE)
mini_ncars <- ncars[mini_ncars, ]
mini_ncars <- mini_ncars %>% filter(class == 1 | class == 2) %>% droplevels()
set.seed(123)
fit_mini_ncars_d <- train(
x =  mini_ncars[, -1],
y = mini_ncars[, 1],
data = mini_ncars,
method = dknn,
trControl = fitControl,
tuneGrid = dgrid_num
)
fit_mini_ncars_d
set.seed(123)
fit_mini_cars_r <- train(x =  mini_ncars[,-1],
y = mini_ncars[,1],
data = mini_ncars,
method = rknn,
trControl = fitControl,
tuneGrid = dgrid_num)
set.seed(123)
fit_mini_cars_r <- train(x =  mini_ncars[,-1],
y = mini_ncars[,1],
data = mini_ncars,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid_num)
fit_mini_cars_r
set.seed(123)
fit_mini_ncars_r <- train(x =  mini_ncars[,-1],
y = mini_ncars[,1],
data = mini_ncars,
method = rknn,
trControl = fitControl,
tuneGrid = rgrid_num)
compare_F1(fit_mini_ncars_d$results, fit_mini_ncars_d$results)
compare_F1(fit_mini_ncars_d$results, fit_mini_ncars_r$results)
compare_F1(fit_mini_ncars_d$results, fit_mini_ncars_d$results)
compare_F1(fit_mini_ncars_r$results, fit_mini_ncars_d$results)
?daisy
ds <- tribble(~iter, ~p0_25, ~p0_5, ~manhattan, ~euclidean, ~chebyshev)
for(i in 1:100000) {
vs <- data.frame(replicate(10,sample(0:1,2,rep=TRUE)))
p0_25 <- dist(vs, method = "minkowski", p = 0.25)[1]
p0_5 <- dist(vs, method = "minkowski", p = 0.5)[1]
manhattan <- dist(vs, method = "manhattan")[1]
euclidean <- dist(vs, method = "euclidean")[1]
chebyshev <- dist(vs, method = "chebyshev")[1]
ds <- bind_rows(ds, tibble(iter = i, manhattan = manhattan, euclidean = euclidean))
}
ds <- tribble(~iter, ~p0_25, ~p0_5, ~manhattan, ~euclidean, ~chebyshev)
for(i in 1:100000) {
vs <- data.frame(replicate(10,sample(0:1,2,rep=TRUE)))
p0_25 <- dist(vs, method = "minkowski", p = 0.25)[1]
p0_5 <- dist(vs, method = "minkowski", p = 0.5)[1]
manhattan <- dist(vs, method = "manhattan")[1]
euclidean <- dist(vs, method = "euclidean")[1]
chebyshev <- dist(vs, method = "maximum")[1]
ds <- bind_rows(ds, tibble(iter = i, manhattan = manhattan, euclidean = euclidean))
}
ds <- tribble(~iter, ~p0_25, ~p0_5, ~manhattan, ~euclidean, ~chebyshev)
for(i in 1:1000) {
vs <- data.frame(replicate(10,sample(0:1,2,rep=TRUE)))
p0_25 <- dist(vs, method = "minkowski", p = 0.25)[1]
p0_5 <- dist(vs, method = "minkowski", p = 0.5)[1]
manhattan <- dist(vs, method = "manhattan")[1]
euclidean <- dist(vs, method = "euclidean")[1]
chebyshev <- dist(vs, method = "maximum")[1]
ds <- bind_rows(ds, tibble(iter = i, manhattan = manhattan, euclidean = euclidean))
}
plotmatrix(ds[,-1])
library(ggplot2)
plotmatrix(ds[,-1])
ggpairs(ds[,-1])
??ggpairs
install.packages("GGally")
library(GGally)
ggpairs(ds[,-1])
head(ds)
?dist
ds <- tribble(~iter, ~p0_25, ~p0_5, ~manhattan, ~euclidean, ~chebyshev)
for(i in 1:1000) {
vs <- data.frame(replicate(10,sample(0:1,2,rep=TRUE)))
p0_25 <- dist(vs, method = "minkowski", p = 0.25)[1]
p0_5 <- dist(vs, method = "minkowski", p = 0.5)[1]
manhattan <- dist(vs, method = "manhattan")[1]
euclidean <- dist(vs, method = "euclidean")[1]
chebyshev <- dist(vs, method = "maximum")[1]
ds <- bind_rows(ds, tibble(iter = i, manhattan = manhattan, euclidean = euclidean))
}
ds <- tribble(~iter, ~p0_25, ~p0_5, ~manhattan, ~euclidean, ~chebyshev)
for(i in 1:1000) {
vs <- data.frame(replicate(10,sample(0:1,2,rep=TRUE)))
p0_25 <- dist(vs, method = "minkowski", p = 0.25)[1]
p0_5 <- dist(vs, method = "minkowski", p = 0.5)[1]
manhattan <- dist(vs, method = "manhattan")[1]
euclidean <- dist(vs, method = "euclidean")[1]
chebyshev <- dist(vs, method = "maximum")[1]
ds <- bind_rows(ds, tibble(iter = i, p0_25 = p0_25, p0_5 = p0_5,
manhattan = manhattan, euclidean = euclidean,
chebyshev = maximum))
}
for(i in 1:1000) {
vs <- data.frame(replicate(10,sample(0:1,2,rep=TRUE)))
p0_25 <- dist(vs, method = "minkowski", p = 0.25)[1]
p0_5 <- dist(vs, method = "minkowski", p = 0.5)[1]
manhattan <- dist(vs, method = "manhattan")[1]
euclidean <- dist(vs, method = "euclidean")[1]
chebyshev <- dist(vs, method = "maximum")[1]
ds <- bind_rows(ds, tibble(iter = i, p0_25 = p0_25, p0_5 = p0_5,
manhattan = manhattan, euclidean = euclidean,
chebyshev = chebyshev))
}
ggplot(ds, aes(manhattan, euclidean)) +
geom_line()
library(GGally)
ggpairs(ds[,-1])
ds <- tribble(~iter, ~p0_25, ~p0_5, ~manhattan, ~euclidean, ~chebyshev, ~binary)
for(i in 1:1000) {
vs <- data.frame(replicate(10,sample(0:1,2,rep=TRUE)))
p0_25 <- dist(vs, method = "minkowski", p = 0.25)[1]
p0_5 <- dist(vs, method = "minkowski", p = 0.5)[1]
manhattan <- dist(vs, method = "manhattan")[1]
euclidean <- dist(vs, method = "euclidean")[1]
chebyshev <- dist(vs, method = "maximum")[1]
binary <- dist(vs, method = "binary")[1]
ds <- bind_rows(ds, tibble(iter = i, p0_25 = p0_25, p0_5 = p0_5,
manhattan = manhattan, euclidean = euclidean,
chebyshev = chebyshev, binary = binary))
}
ggpairs(ds[,-1])
