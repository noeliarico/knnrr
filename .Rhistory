source('~/Desktop/Github/paper/example_train_dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/example_train_dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/example_train_dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/chooseBest.R', echo=TRUE)
source('~/Desktop/Github/paper/example_train_dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/example_train_dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/methods/rknn/chooseBest.R', echo=TRUE)
source('~/Desktop/Github/paper/example_train_dknn.R', echo=TRUE)
source('~/Desktop/Github/paper/new choose.R', echo=TRUE)
source('~/Desktop/Github/paper/example_train_dknn.R', echo=TRUE)
install.packages("rmdformats")
install.packages("rmdformats")
install.packages("rmdformats")
library(rmdformats)
install.packages("cowplot")
colors <- c("#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD",
"#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD")
colors <- factor(colors)
colors
colors <- c("#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD",
"#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD")
colors <- factor(colors, levels = 1:10)
m2 %>%
mutate(X1 = cell_spec(
X1, color = "black", bold = T,
background = X1#spec_color(1:3, end = 0.9, option = "A", direction = -1)
)) %>%
kable(escape = F, align = "c") %>%
kable_styling()
colors
colors <- c("#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD",
"#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD")
colors <- factor(colors, levels = 1:10)
colors
colors <- c("#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD",
"#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD")
colors <- factor(colors, labels = colors, levels = 1:10)
colors
colors
colors <- c("#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD",
"#FDDFDF", "#FCF7DE", "#DEFDE0", "#DEF3FD", "#F0DEFD")
factor(1:10, labels = colors, levels = 1:10)
colors
colors[3]
v <- c(2.144761, 1.627882, 0.7141428, 4.5607017, 3.9648455, 3.8923001, 4.160529, 6.522270, 4.2731721)
v
sort(v)
match(v, sort(v))
v <- c(4.5607017, 2.144761, 1.627882, 0.7141428, 4.5607017, 3.9648455, 3.8923001, 4.160529, 6.522270, 4.2731721)
match(v, sort(v))
spec_color(1:10, end = 0.9, option = "A", direction = -1)
library(kableExtra)
spec_color(1:10, end = 0.9, option = "A", direction = -1)
source('~/Desktop/Github/paper/example_train_dknn.R', echo=TRUE)
head(somerville)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
getwg()
getwd()
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
head(somerville)
head(cars)
sapply(cars, unique)
head(zoo)
head(chess)
sapply(chess, unique)
head(life_expectancy)
(85.6+93.5)/2
# https://archive.ics.uci.edu/ml/datasets/zoo
URL <- "https://archive.ics.uci.edu/ml/machine-learning-databases/zoo/zoo.data"
download.file(URL, destfile = file.path("data", "multiclass", "categorical",
"10ormore", "zoo.csv"))
zoo <- read_csv(file.path(getwd(), "data/binary/numerical/lessthan10/weight-height.csv"),
col_types = cols(.default = col_factor()),
col_names = c("animal",
"hair",
"feathers",
"eggs",
"milk",
"airborne",
"aquatic",
"predator",
"toothed",
"backbone",
"breathes",
"venomous",
"fins",
"legs",
"tail",
"domestic",
"catsize",
"type"))
zoo <- read_csv(file.path(getwd(), "data/multiclass/categorical/10ormore/zoo.csv"),
col_types = cols(.default = col_factor()),
col_names = c("animal",
"hair",
"feathers",
"eggs",
"milk",
"airborne",
"aquatic",
"predator",
"toothed",
"backbone",
"breathes",
"venomous",
"fins",
"legs",
"tail",
"domestic",
"catsize",
"type"))
zoo
zoo <- read_csv(file.path(getwd(), "data/multiclass/categorical/10ormore/zoo.csv"),
col_types = cols(.default = col_factor()),
col_names = c("animal",
"hair",
"feathers",
"eggs",
"milk",
"airborne",
"aquatic",
"predator",
"toothed",
"backbone",
"breathes",
"venomous",
"fins",
"legs",
"tail",
"domestic",
"catsize",
"type")) %>%
mutate(animal = NULL)
zoo
table(zoo$type)
zoo %>% filter(type == 5, type == 3)
zoo %>% filter(type == 5 | type == 3)
zoo %>% filter(type == 4 | type == 7)
zoo %>% filter(type == 5 | type == 3)
head(tic_tac_toe)
head(cars)
head(somerville)
head(zoo)
zoo$type
table(zoo$type)
zoo %>% filter(type == 4 | type == 2)
zoo %>% filter(type == 4 | type == 2) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo <- zoo %>% filter(type == 4 | type == 2) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo <- zoo %>% filter(type == 4 | type == 2) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
sapply(unique, mini_zoo)
sapply(mini_zoo, unique)
sapply(zoo, unique)
table(zoo$type)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
select_if(function(col) length(unique(col)) > 1)
sink("iris_euclidean_randomly")
sink()
2+2
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
select_if(function(col) length(unique(col)) > 1)
sink("zoo_jaccard_randomly")
set.seed(123)
out <- dknnfTrain(mini_iris_train[,-5], mini_iris_test[,-5], mini_iris_train$Species,
k = 3, distance = "euclidean", ties = "randomly", developer = TRUE)
predict_for_k(out$distances, out$cl, "randomly")
zoo
sink()
zoo
mini_zoo
sapply(mini_zoo, unique)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
select_if(function(col) length(unique(col)) > 1) %>%
select(-one_of(legs))
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
select(-one_of(legs)) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
select(-one_of("legs")) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
select(-one_of("legs")) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#select(-one_of("legs")) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#select(-one_of("legs")) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
select(-one_of("legs")) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
mutate_all(.funs=list(as.numeric(.))) %>%
select(-one_of("legs")) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
mutate_all(funs=list(~as.numeric(.))) %>%
select(-one_of("legs")) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
mutate_all(.funs=list(~as.numeric(.))) %>%
select(-one_of("legs")) %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
mutate_all(.funs=list(~as.numeric(.))) %>%
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
mini_zoo
soybean_small <- read_csv(file.path(getwd(), "data/multiclass/categorical/10ormore/soybean_small.csv"),
col_types = cols(class = col_factor(NULL)),
col_names = c("class",
"date",
"plant_stand",
"precip",
"temp",
"hail",
"crop_hist",
"area_damaged",
"severity",
"seed_tmt",
"germination",
"plant_growth",
"leaves",
"leafspots_halo",
"leafspots_marg",
"leafspot_size",
"leaf_shread",
"leaf_malf",
"leaf_mild",
"stem",
"lodging",
"stem_cankers",
"canker_lesion",
"fruiting_bodies",
"external_decay",
"mycelium",
"int_discolor",
"sclerotia",
"fruit_pods",
"fruit_spots",
"seed",
"mold_growth",
"seed_discolor",
"seed_size",
"shriveling",
"roots"),
na = "?") %>%
drop_na
soybean_small
soybean_small <- read_csv(file.path(getwd(), "data/multiclass/categorical/10ormore/soybean_small.csv"),
col_types = cols(class = col_factor(NULL)),
col_names = c("class",
"date",
"plant_stand",
"precip",
"temp",
"hail",
"crop_hist",
"area_damaged",
"severity",
"seed_tmt",
"germination",
"plant_growth",
"leaves",
"leafspots_halo",
"leafspots_marg",
"leafspot_size",
"leaf_shread",
"leaf_malf",
"leaf_mild",
"stem",
"lodging",
"stem_cankers",
"canker_lesion",
"fruiting_bodies",
"external_decay",
"mycelium",
"int_discolor",
"sclerotia",
"fruit_pods",
"fruit_spots",
"seed",
"mold_growth",
"seed_discolor",
"seed_size",
"shriveling",
"roots"),
na = "?") %>%
drop_na %>%
select_if(function(col) length(unique(col)) > 1)
soybean_small
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7)  %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
mutate_all(.funs=list(~as.numeric(.)))  %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
#select_if(function(col) length(unique(col)) > 1)
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
mini_zoo
table(mini_zoo$type)
load_data(.)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
load_data(.)
load_data(".")
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
cars <<- read_csv(file.path(path_to_data, "data/binary/categorical/lessthan10/cars.csv"),
col_types = cols(.default = col_factor(NULL)),
col_names = c("buying", "maint", "doors", "persons",
"lug_boot", "safety", "class"))
load_data()
rm(list = ls())
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
load_data()
is.null(path_to_data)
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
rm(list = ls())
library(caret)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
#select_if(function(col) length(unique(col)) > 1)
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
path_to_data <- tryCatch({
path_to_data
}, error = function(e) {
"."
})
source('~/Desktop/Github/paper/data/load_data.R', echo=TRUE)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
#select_if(function(col) length(unique(col)) > 1)
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
mini_zoo
library(caret)
createDataPartition(mini_zoo$type, p = 0.5, list = FALSE)
mini_zoo[indexes,]
indexes <- createDataPartition(mini_zoo$type, p = 0.5, list = FALSE)
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.5, list = FALSE)
mini_zoo
mini_zoo[indexes,]
mini_zoo <- mini_zoo[indexes,]
table(mini_zoo$type)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
#select_if(function(col) length(unique(col)) > 1)
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.5, list = FALSE)
mini_zoo <- mini_zoo[indexes,]
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.8, list = FALSE)
mini_zoo_train <- mini_zoo[indexes,]
mini_zoo_tesr <- mini_zoo[indexes,]
mini_zoo_train
mini_zoo_test <- mini_zoo[indexes,]
mini_zoo_test
mini_zoo_test <- mini_zoo[-indexes,]
mini_zoo_test
rm(indexes)
sink("zoo_jaccard_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-19], mini_zoo_test[,-5], mini_zoo_train$type,
k = 3, distance = "jaccard", ties = "randomly", developer = TRUE)
list.files("methods")
sink()
list.files("methods")
list.files("methods", all.files = TRUE)
list.files("methods", recursive = TRUE)
source(list.files("methods", recursive = TRUE))
sapply(list.files("methods", recursive = TRUE), source)
files <- list.files("methods", recursive = TRUE)
files
file.path("methods", files)
sapply(files, source)
source('~/Desktop/Github/paper/source.R', echo=TRUE)
source('~/Desktop/Github/paper/mini_zoo.R', echo=TRUE)
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
#select_if(function(col) length(unique(col)) > 1)
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.5, list = FALSE)
mini_zoo <- mini_zoo[indexes,]
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.8, list = FALSE)
mini_zoo_train <- mini_zoo[indexes,]
mini_zoo_test <- mini_zoo[-indexes,]
mini_zoo_test
sink()
mini_zoo_test
mini_zoo_train
mini_zoo_test
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
#select_if(function(col) length(unique(col)) > 1)
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
mini_zoo <- mini_zoo %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
#select_if(function(col) length(unique(col)) > 1)
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.5, list = FALSE)
mini_zoo <- mini_zoo[indexes,]
mini_zoo <- mini_zoo %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
select_if(function(col) length(unique(col)) > 1)
mini_zoo
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.8, list = FALSE)
mini_zoo_train <- mini_zoo[indexes,]
mini_zoo_train
mini_zoo_test
rm(indexes)
sink("zoo_jaccard_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-19], mini_zoo_test[,-5], mini_zoo_train$type,
k = 3, distance = "jaccard", ties = "randomly", developer = TRUE)
mini_zoo_train
sink.reset()
sink()
sink()
mini_zoo
sink("zoo_jaccard_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "jaccard", ties = "randomly", developer = TRUE)
sink()
mini_zoo_test
mini_zoo_train
mini_zoo <- zoo %>% filter(type == 4 | type == 2 | type == 7) %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
#select_if(function(col) length(unique(col)) > 1)
select(-one_of("legs")) %>%
select_if(function(col) return(length(unique(col)) > 1))
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.5, list = FALSE)
mini_zoo <- mini_zoo[indexes,]
mini_zoo <- mini_zoo %>%
#mutate_all(.funs=list(~as.numeric(.)))  %>%
select_if(function(col) length(unique(col)) > 1)
set.seed(123)
indexes <- createDataPartition(mini_zoo$type, p = 0.8, list = FALSE)
mini_zoo_train <- mini_zoo[indexes,]
mini_zoo_test <- mini_zoo[-indexes,]
mini_zoo
mini_zoo_train
mini_zoo_test
rm(indexes)
sink("zoo_jaccard_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "jaccard", ties = "randomly", developer = TRUE)
source('~/Desktop/Github/paper/distances/custom_distances.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/dist_make.R', echo=TRUE)
predict_for_k(out$distances, out$cl, "randomly")
sink("zoo_jaccard_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "jaccard", ties = "randomly", developer = TRUE)
source('~/Desktop/Github/paper/distances/dist_make.R', echo=TRUE)
??dist_make
source('~/Desktop/Github/paper/distances/dist_make.R', echo=TRUE)
detach("package:usedist", unload = TRUE)
source('~/Desktop/Github/paper/distances/dist_make.R', echo=TRUE)
source('~/Desktop/Github/paper/distances/dist_make.R', echo=TRUE)
source('~/Desktop/Github/paper/mini_zoo.R', echo=TRUE)
sink()
22
sink()
sink()
sink()
2+2
sink("zoo_jaccard_randomly")
set.seed(123)
out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
k = 3, distance = "jaccard", ties = "randomly", developer = TRUE)
predict_for_k(out$distances, out$cl, "randomly")
sink()
