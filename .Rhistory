figure
fit_mini_chess_d
confusionMatrix(fit_mini_chess_d)
table(mini_chess$draw)
table(mini_chess$moves)
set.seed(123)
fit_mini_chess_r <- train(x =  mini_chess[,-7],
y = mini_chess[,7],
data = mini_chess,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
fit_mini_chess_r
table(mini_chess$draw)
table(mini_chess$moves)
chess <- as.data.frame(chess)
set.seed(123)
mini_chess <- createDataPartition(chess$moves, p = 0.01, list = FALSE)
mini_chess <- chess[mini_chess,]
levels(mini_chess$moves) <- list(draw = "draw",
less_than_10 = levels(mini_chess$moves)[2:11],
ten_eleven = c("ten",  "eleven"),
twelve_thirteen = c("twelve", "thirteen"),
thirteen = "thirteen",
fourteen = "fourteen",
fifteen_or_more = c("fifteen","sixteen"))
set.seed(123)
fit_mini_chess_d <- train(x =  mini_chess[,-7],
y = mini_chess[,7],
data = mini_chess,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_mini_chess_d
chess <- as.data.frame(chess)
chess <- as.data.frame(chess)
set.seed(123)
mini_chess <- createDataPartition(chess$moves, p = 0.01, list = FALSE)
mini_chess <- chess[mini_chess,] %>% filter (moves != "draw") %>% droplevels()
levels(mini_chess$moves) <- list(less_than_10 = levels(mini_chess$moves)[1:10],
ten_eleven = c("ten",  "eleven"),
twelve_thirteen = c("twelve", "thirteen"),
thirteen = "thirteen",
fourteen = "fourteen",
fifteen_or_more = c("fifteen","sixteen"))
set.seed(123)
fit_mini_chess_d <- train(x =  mini_chess[,-7],
y = mini_chess[,7],
data = mini_chess,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
set.seed(123)
fit_mini_chess_r <- train(x =  mini_chess[,-7],
y = mini_chess[,7],
data = mini_chess,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
fit_mini_chess_r
fit_mini_chess_d
head(post_operative)
fit_post_operative_d
nrow(post_operative)
post_operative <- as.data.frame(post_operative)
set.seed(123)
fit_post_operative_d <- train(x =  post_operative[,-1],
y = post_operative[,1],
data = post_operative,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
post_operative <- as.data.frame(post_operative) $>$ droplevels()
post_operative <- as.data.frame(post_operative) %>% droplevels()
nrow(post_operative)
set.seed(123)
fit_post_operative_d <- train(x =  post_operative[,-1],
y = post_operative[,1],
data = post_operative,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_post_operative_d
post_operative$class
table(post_operative$class)
post_operative %>% mutate(new_class = ifelse(class < 10, ifelse(class < 5, "less_than_5", "less_than_10"),
ifelse(class < 17, "less_than_15", "less_than_22")))
post_operative %>% mutate(class = as.numeric(class),
new_class = ifelse(class < 10, ifelse(class < 5, "less_than_5", "less_than_10"),
ifelse(class < 17, "less_than_15", "less_than_22")))
ifelse(class < 17, "less_than_15", "less_than_22"))))$new_class
ifelse(class < 17, "less_than_15", "less_than_22")))$new_class)
post_operative %>% mutate(class = as.numeric(class),
new_class = ifelse(class < 10, ifelse(class < 5, "less_than_5", "less_than_10"),
ifelse(class < 17, "less_than_15", "less_than_22")))
post_operative <- as.data.frame(post_operative) %>% droplevels()
new_post_operative <- post_operative %>% mutate(class = as.numeric(class),
new_class = ifelse(class < 10, ifelse(class < 5, "less_than_5", "less_than_10"),
ifelse(class < 17, "less_than_15", "less_than_22")
),
class = factor(new_class),
new_class = NULL)
new_post_operative
head(new_post_operative)
table(new_post_operative$class)
table(post_operative$class)
post_operative <- as.data.frame(post_operative) %>% droplevels()
new_post_operative <- post_operative %>% mutate(class = as.numeric(class),
new_class = ifelse(class < 10, ifelse(class < 3, "less_than_3", "less_than_10"),
ifelse(class < 17, "less_than_17", "less_than_22")
),
class = factor(new_class),
new_class = NULL)
table(new_post_operative$class)
post_operative <- as.data.frame(post_operative) %>% droplevels()
new_post_operative <- post_operative %>% mutate(class = as.numeric(class),
new_class = ifelse(class < 8, ifelse(class < 3, "less_than_3", "less_than_8"),
ifelse(class < 17, "less_than_17", "less_than_22")
),
class = factor(new_class),
new_class = NULL)
table(new_post_operative$class)
post_operative <- as.data.frame(post_operative) %>% droplevels()
new_post_operative <- post_operative %>% mutate(class = as.numeric(class),
new_class = ifelse(class < 8, ifelse(class < 3, "less_than_3", "less_than_8"),
ifelse(class < 14, "less_than_14", "less_than_22")
),
class = factor(new_class),
new_class = NULL)
table(new_post_operative$class)
post_operative <- as.data.frame(post_operative) %>% droplevels()
new_post_operative <- post_operative %>% mutate(class = as.numeric(class),
new_class = ifelse(class < 8, ifelse(class < 3, "less_than_3", "less_than_8"),
ifelse(class < 14, "less_than_14", "less_than_22")
),
class = factor(new_class),
new_class = NULL)
set.seed(123)
fit_post_operative_d <- train(x =  post_operative[,-1],
y = post_operative[,1],
data = post_operative,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_post_operative_d
(
)
set.seed(123)
fit_post_operative_d <- train(x =  new_post_operative[,-1],
y = new_post_operative[,1],
data = new_post_operative,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_post_operative_d
set.seed(123)
fit_post_operative_r <- train(x =  post_operative[,-1],
y = post_operative[,1],
data = post_operative,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
cat_multiclass <- c("post_operative") #connect4", "poker_hand", "primary_tumor", "soybean_small", "zoo")
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
# all_plots_car_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
set.seed(123)
fit_post_operative_r <- train(x =  new_post_operative[,-1],
y = new_post_operative[,1],
data = new_post_operative,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
fit_post_operative_r
fit_post_operative_d
fit_post_operative_r
cat_multiclass <- c("post_operative") #connect4", "poker_hand", "primary_tumor", "soybean_small", "zoo")
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
# all_plots_car_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots <- all_plots_cat_multiclass
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
connect4
table(connect4$class)
connect4 <- as.data.frame(connect4)
set.seed(123)
mini_connect4 <- createDataPartition(connect4$class, p = 0.006, list = FALSE)
mini_connect4 <- connect4[mini_connect4, ]
table(mini_connect4$class)
set.seed(123)
fit_mini_connect4_d <- train(x =  mini_connect4[,-43],
y = mini_connect4[,43],
data = mini_connect4,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_mini_connect4_d
set.seed(123)
fit_mini_connect4_r <- train(x =  mini_connect4[,-43],
y = mini_connect4[,43],
data = mini_connect4,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
fit_mini_connect4_r
cat_multiclass <- c("post_operative", "connect4")#, "poker_hand", "primary_tumor", "soybean_small", "zoo")
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
# all_plots_car_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
cat_multiclass <- c("post_operative", "mini_connect4")#, "poker_hand", "primary_tumor", "soybean_small", "zoo")
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
# all_plots_car_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
ass
all_plots <- all_plots_cat_multiclass
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
fit_poker_hand_d
poker_hand <- as.data.frame(poker_hand)
set.seed(123)
mini_poker_hand <- createDataPartition(poker_hand$class, p = 0.01, list = FALSE)
mini_poker_hand <- poker_hand[mini_poker_hand, ]
head(mini_poker_hand)
table(mini_poker_hand$class)
set.seed(123)
mini_poker_hand <- createDataPartition(poker_hand$class, p = 0.01, list = FALSE)
mini_poker_hand <- poker_hand[mini_poker_hand, ] %>% filter(class == 0 | class == 1) %>% droplevels()
set.seed(123)
fit_poker_hand_d <- train(x =  mini_poker_hand[,-11],
y = mini_poker_hand[,11],
data = mini_poker_hand,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_mini_poker_hand_d <- train(x =  mini_poker_hand[,-11],
y = mini_poker_hand[,11],
data = mini_poker_hand,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
set.seed(123)
fit_mini_poker_hand_d <- train(x =  mini_poker_hand[,-11],
y = mini_poker_hand[,11],
data = mini_poker_hand,
method = dknn,
trControl = binary_fitControl,
tuneGrid = dgrid_cat)
set.seed(123)
fit_mini_poker_hand_r <- train(x =  mini_poker_hand[,-11],
y = mini_poker_hand[,11],
data = mini_poker_hand,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
primary_tumor
primary_tumor <- as.data.frame(primary_tumor)
post_operative <- read_csv(file.path(path_to_data, "data/multiclass/categorical/10ormore/primary_tumor.csv",
col_names = FALSE))
post_operative <- read_csv(file.path(path_to_data, "data/multiclass/categorical/10ormore/primary_tumor.csv"),
col_names = FALSE)
head(post_operative)
post_operative <- read_csv(file.path(path_to_data, "data/multiclass/categorical/lessthan10/post_operative.csv"),
col_types = cols(.default = col_factor(NULL)),
col_names = c("internal_temperature",
"surface_temperature",
"oxygen",
"blood_preassure",
"stability_surface_temperature",
"stability_core_temperature",
"stability_blood_preassure",
"comfort",
"decision"),
na = "?") %>% drop_na
primary_tumor <- read_csv(file.path(path_to_data, "data/multiclass/categorical/10ormore/primary_tumor.csv"),
col_names = FALSE)
primary_tumor <- read_csv(file.path(path_to_data, "data/multiclass/categorical/10ormore/primary_tumor.csv"),
col_types = cols(.default = col_factor(NULL)),
col_names = FALSE)
sapply(primary_tumor, unique)
primary_tumor <- read_csv(file.path(path_to_data, "data/multiclass/categorical/10ormore/primary_tumor.csv"),
col_types = cols(.default = col_factor(NULL)),
col_names = FALSE,
na = "?") %>% drop_na
sapply(primary_tumor, unique)
primary_tumor <- read_csv(file.path(path_to_data, "data/multiclass/categorical/10ormore/primary_tumor.csv"),
col_types = cols(.default = col_factor(NULL),
X1 = col_number()),
col_names = FALSE,
na = "?") %>% drop_na
sapply(primary_tumor, unique)
nrow(primary_tumor)
soybean_small <- as.data.frame(soybean_small)
set.seed(123)
nrow(soybean_large)
ncol(soybean_small)
head(soybean_small)
soybean_large <- as.data.frame(soybean_large)
set.seed(123)
fit_soybean_large_d <- train(x =  soybean_large[,-1],
y = soybean_large[,1],
data = soybean_large,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
soybean_large <- as.data.frame(soybean_large) %>% droplevels()
set.seed(123)
fit_soybean_large_d <- train(x =  soybean_large[,-1],
y = soybean_large[,1],
data = soybean_large,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_soybean_large_d
sapply(soybean_large, unique)
cat_multiclass <- c("post_operative", "mini_connect4", "mini_poker_hand", "soybean_large", "zoo")
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
# all_plots_car_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
cat_multiclass <- c("post_operative", "mini_connect4","soybean_large", "zoo")
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
# all_plots_car_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
set.seed(123)
fit_soybean_large_r <- train(x =  soybean_large[,-1],
y = soybean_large[,1],
data = soybean_large,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
# all_plots_num_binary <- lapply(num_binary, append_plot, metric = "F1")
# all_plots_num_multiclass <- lapply(num_multiclass, append_plot, metric = "Mean_F1")
# all_plots_car_binary <- lapply(cat_binary, append_plot, metric = "F1")
all_plots_cat_multiclass <- lapply(cat_multiclass, append_plot, metric = "Mean_F1")
all_plots <- all_plots_cat_multiclass
#library(ggpubr)
figure <- ggarrange(plotlist = all_plots, common.legend = TRUE)
figure
zoo$type
ncol(zoo)
head(zoo)
table(zoo$type)
sapply(zoo, class)
zoo <- as.data.frame(zoo) %>% filter(type == 1 | type == 4 | type == 2)
set.seed(123)
fit_zoo_d <- train(x =  zoo[,-17],
y = zoo[,17],
data = zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
zoo <- as.data.frame(zoo) %>% filter(type == 1 | type == 4 | type == 2) %>% droplevels()
set.seed(123)
fit_zoo_d <- train(x =  zoo[,-17],
y = zoo[,17],
data = zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
warnings()
nrow(zoo)
sapply(zoo, unique)
zoo <- as.data.frame(zoo) %>% filter(type == 1 | type == 4 | type == 2) %>% droplevels() %>% mutate(blackbone = NULL)
set.seed(123)
fit_zoo_d <- train(x =  zoo[,-17],
y = zoo[,17],
data = zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
warnings()
sapply(zoo, table)
zoo <- as.data.frame(zoo) %>% filter(type == 1 | type == 4 | type == 2) %>% droplevels() %>% mutate(blackbone = NULL)
sapply(zoo, table)
zoo <- as.data.frame(zoo) %>% filter(type == 1 | type == 4 | type == 2)  %>% mutate(backbone = NULL) %>% droplevels()
set.seed(123)
fit_zoo_d <- train(x =  zoo[,-17],
y = zoo[,17],
data = zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
set.seed(123)
fit_zoo_d <- train(x =  zoo[,-16],
y = zoo[,16],
data = zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_zoo_d
set.seed(123)
fit_zoo_r <- train(x =  zoo[,-17],
y = zoo[,17],
data = zoo,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
set.seed(123)
fit_zoo_r <- train(x =  zoo[,-16],
y = zoo[,16],
data = zoo,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
zoo <- as.data.frame(zoo) %>% filter(type == 1 | type == 4 | type == 2)  %>% mutate(backbone = NULL) %>% droplevels()
mini_zoo <- zoo[,c(1:8,9)]
set.seed(123)
fit_zoo_d <- train(x =  mini_zoo[,-9],
y = mini_zoo[,9],
data = mini_zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_zoo_d
zoo <- as.data.frame(zoo) %>% filter(type == 1 | type == 4 | type == 2)  %>% mutate(backbone = NULL) %>% droplevels()
mini_zoo <- zoo[,c(1:8,17)]
set.seed(123)
fit_zoo_d <- train(x =  mini_zoo[,-9],
y = mini_zoo[,9],
data = mini_zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
fit_zoo_d
zoo <- as.data.frame(zoo) %>% filter(type == 1 | type == 4 | type == 2)  %>% mutate(backbone = NULL) %>% droplevels()
mini_zoo <- zoo[,c(1:3,17)]
set.seed(123)
fit_zoo_d <- train(x =  mini_zoo[,-9],
y = mini_zoo[,9],
data = mini_zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat)
mini_zoo
zoo <- as.data.frame(zoo) %>% filter(type == 1 |
type == 4 |
type == 2)  %>% mutate(backbone = NULL) %>% droplevels()
mini_zoo <- zoo[, c(1:3, 17)]
ncol(mini:zoo)
ncol(mini_zoo)
ncol(zoo)
zoo <- as.data.frame(zoo) %>% filter(type == 1 |
type == 4 |
type == 2)  %>% mutate(backbone = NULL) %>% droplevels()
mini_zoo <- zoo[, c(1:3, 16)]
set.seed(123)
fit_zoo_d <- train(
x =  mini_zoo[, -4],
y = mini_zoo[, 4],
data = mini_zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat
)
fit_zoo_d
mini_zoo <- zoo[, c(5:9, 16)]
set.seed(123)
fit_zoo_d <- train(
x =  mini_zoo[, -4],
y = mini_zoo[, 4],
data = mini_zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat
)
fit_zoo_d
zoo <- as.data.frame(zoo) %>% filter(type == 1 |
type == 4 |
type == 2)  %>% mutate(backbone = NULL) %>% droplevels()
mini_zoo <- zoo[, c(6:10, 16)]
set.seed(123)
fit_zoo_d <- train(
x =  mini_zoo[, -4],
y = mini_zoo[, 4],
data = mini_zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat
)
fit_zoo_d
zoo <- as.data.frame(zoo) %>% filter(type == 1 |
type == 4 |
type == 2)  %>% mutate(backbone = NULL) %>% droplevels()
mini_zoo <- zoo[, c(5:8, 16)]
ncol(mini_zoo)
set.seed(123)
fit_zoo_d <- train(
x =  mini_zoo[, -5],
y = mini_zoo[, 5],
data = mini_zoo,
method = dknn,
trControl = multi_fitControl,
tuneGrid = dgrid_cat
)
fit_zoo_d
set.seed(123)
fit_zoo_r <- train(x =  mini_zoo[, -5],
y = mini_zoo[, 5],
data = mini_zoo,
method = rknn,
trControl = multi_fitControl,
tuneGrid = rgrid_cat)
fit_zoo_r
fit_zoo_d
