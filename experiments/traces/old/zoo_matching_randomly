
> set.seed(123)

> out <- dknnfTrain(mini_zoo_train[,-13], mini_zoo_test[,-13], mini_zoo_train$type,
+                   k = 3, distance = "matching", ties = "randomly ..." ... [TRUNCATED] 
-> Train dknn k = 3, distance = matching, ties = randomly
nrow(train) = 14 and nrow(test) = 3 
[1] "Invalid distance!!!"

-> Train rknn k =  3 , rr =  borda_count , ties = threshold , developer =  TRUE , atttype =  custom 

nrow(train) = 14 and nrow(test) = 3 

Calculating the distances for method = s1 
[1] "s1 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.5547002 0.9486833 0.4082483 0.8819171 0.8401681 0.4082483 0.8401681 0.8401681
11 0.9176629 0.6546537 0.8819171 0.4082483 0.5547002 0.8819171 0.0000000 0.0000000
19 0.9176629 0.7905694 0.8819171 0.6546537 0.5547002 0.7905694 0.5547002 0.5547002
          27        28        29        30        31        33
1  0.4082483 0.9176629 0.5547002 0.9176629 0.4082483 0.9176629
11 0.8819171 0.5547002 0.9176629 0.5547002 0.8819171 0.5547002
19 0.8819171 0.7302967 0.8401681 0.5547002 0.7905694 0.7302967

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s2 
[1] "s2 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.4264014 0.9045340 0.3015113 0.7977240 0.7385489 0.3015113 0.7385489 0.7385489
11 0.8528029 0.5222330 0.7977240 0.3015113 0.4264014 0.7977240 0.0000000 0.0000000
19 0.8528029 0.6741999 0.7977240 0.5222330 0.4264014 0.6741999 0.4264014 0.4264014
          27        28        29        30        31        33
1  0.3015113 0.8528029 0.4264014 0.8528029 0.3015113 0.8528029
11 0.7977240 0.4264014 0.8528029 0.4264014 0.7977240 0.4264014
19 0.7977240 0.6030227 0.7385489 0.4264014 0.6741999 0.6030227

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s3 
[1] "s3 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.6859943 0.9733285 0.5345225 0.9354143 0.9097177 0.5345225 0.9097177 0.9097177
11 0.9561829 0.7745967 0.9354143 0.5345225 0.6859943 0.9354143 0.0000000 0.0000000
19 0.9561829 0.8770580 0.9354143 0.7745967 0.6859943 0.8770580 0.6859943 0.6859943
          27        28        29        30        31        33
1  0.5345225 0.9561829 0.6859943 0.9561829 0.5345225 0.9561829
11 0.9354143 0.6859943 0.9561829 0.6859943 0.9354143 0.6859943
19 0.9354143 0.8340577 0.9097177 0.6859943 0.8770580 0.8340577

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s4 
[1] "s4 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.5547002 0.9486833 0.4082483 0.8819171 0.8401681 0.4082483 0.8401681 0.8401681
11 0.9176629 0.6546537 0.8819171 0.4082483 0.5547002 0.8819171 0.0000000 0.0000000
19 0.9176629 0.7905694 0.8819171 0.6546537 0.5547002 0.7905694 0.5547002 0.5547002
          27        28        29        30        31        33
1  0.4082483 0.9176629 0.5547002 0.9176629 0.4082483 0.9176629
11 0.8819171 0.5547002 0.9176629 0.5547002 0.8819171 0.5547002
19 0.8819171 0.7302967 0.8401681 0.5547002 0.7905694 0.7302967

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s5 
[1] "s5 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.4264014 0.9045340 0.3015113 0.7977240 0.7385489 0.3015113 0.7385489 0.7385489
11 0.8528029 0.5222330 0.7977240 0.3015113 0.4264014 0.7977240 0.0000000 0.0000000
19 0.8528029 0.6741999 0.7977240 0.5222330 0.4264014 0.6741999 0.4264014 0.4264014
          27        28        29        30        31        33
1  0.3015113 0.8528029 0.4264014 0.8528029 0.3015113 0.8528029
11 0.7977240 0.4264014 0.8528029 0.4264014 0.7977240 0.4264014
19 0.7977240 0.6030227 0.7385489 0.4264014 0.6741999 0.6030227

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s6 
[1] "s6 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.6030227 1.2792043 0.4264014 1.1281521 1.0444659 0.4264014 1.0444659 1.0444659
11 1.2060454 0.7385489 1.1281521 0.4264014 0.6030227 1.1281521 0.0000000 0.0000000
19 1.2060454 0.9534626 1.1281521 0.7385489 0.6030227 0.9534626 0.6030227 0.6030227
          27        28        29        30        31        33
1  0.4264014 1.2060454 0.6030227 1.2060454 0.4264014 1.2060454
11 1.1281521 0.6030227 1.2060454 0.6030227 1.1281521 0.6030227
19 1.1281521 0.8528029 1.0444659 0.6030227 0.9534626 0.8528029

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s7 
[1] "s7 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.4264014 0.9045340 0.3015113 0.7977240 0.7385489 0.3015113 0.7385489 0.7385489
11 0.8528029 0.5222330 0.7977240 0.3015113 0.4264014 0.7977240 0.0000000 0.0000000
19 0.8528029 0.6741999 0.7977240 0.5222330 0.4264014 0.6741999 0.4264014 0.4264014
          27        28        29        30        31        33
1  0.3015113 0.8528029 0.4264014 0.8528029 0.3015113 0.8528029
11 0.7977240 0.4264014 0.8528029 0.4264014 0.7977240 0.4264014
19 0.7977240 0.6030227 0.7385489 0.4264014 0.6741999 0.6030227

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s8 
[1] "s8 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.5749596 0.9833322 0.4165978 0.9315410 0.8907235 0.4165978 0.8907235 0.8907235
11 0.9620914 0.6863486 0.9315410 0.4165978 0.5749596 0.9315410 0.0000000 0.0000000
19 0.9620914 0.8381404 0.9315410 0.6863486 0.5749596 0.8381404 0.5749596 0.5749596
          27        28        29        30        31        33
1  0.4165978 0.9620914 0.5749596 0.9620914 0.4165978 0.9620914
11 0.9315410 0.5749596 0.9620914 0.5749596 0.9315410 0.5749596
19 0.9315410 0.7713892 0.8907235 0.5749596 0.8381404 0.7713892

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s9 
[1] "s9 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.6030227 1.2792043 0.4264014 1.1281521 1.0444659 0.4264014 1.0444659 1.0444659
11 1.2060454 0.7385489 1.1281521 0.4264014 0.6030227 1.1281521 0.0000000 0.0000000
19 1.2060454 0.9534626 1.1281521 0.7385489 0.6030227 0.9534626 0.6030227 0.6030227
          27        28        29        30        31        33
1  0.4264014 1.2060454 0.6030227 1.2060454 0.4264014 1.2060454
11 1.1281521 0.6030227 1.2060454 0.6030227 1.1281521 0.6030227
19 1.1281521 0.8528029 1.0444659 0.6030227 0.9534626 0.8528029

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Calculating the distances for method = s10 
[1] "s10 distance..."

--> Distances: 
           2         4        12        13        15        21        25        26
1  0.7687061 0.9534626 0.7385489 0.9045340 0.8790491 0.7385489 0.8790491 0.8790491
11 0.9293204 0.7977240 0.9045340 0.7385489 0.7687061 0.9045340 0.7071068 0.7071068
19 0.9293204 0.8528029 0.9045340 0.7977240 0.7687061 0.8528029 0.7687061 0.7687061
          27        28        29        30        31        33
1  0.7385489 0.9293204 0.7687061 0.9293204 0.7385489 0.9293204
11 0.9045340 0.7687061 0.9293204 0.7687061 0.9045340 0.7687061
19 0.9045340 0.8257228 0.8790491 0.7687061 0.8528029 0.8257228

--> Rankings: 
   2 4 12 13 15 21 25 26 27 28 29 30 31 33
1  2 6  1  4  3  1  3  3  1  5  2  5  1  5
11 6 4  5  2  3  5  1  1  5  3  6  3  5  3
19 7 4  6  2  1  4  1  1  6  3  5  1  4  3

Profile of rankings: 
12 ~ 21 ~ 27 ~ 31 > 2 ~ 29 > 15 ~ 25 ~ 26 > 13 > 28 ~ 30 ~ 33 > 4 
  numberOfVoters                                                           ranking
1             10 12 ~ 21 ~ 27 ~ 31 > 2 ~ 29 > 15 ~ 25 ~ 26 > 13 > 28 ~ 30 ~ 33 > 4
[1] "-----"
25 ~ 26 > 13 > 15 ~ 28 ~ 30 ~ 33 > 4 > 12 ~ 21 ~ 27 ~ 31 > 2 ~ 29 
  numberOfVoters                                                           ranking
1             10 25 ~ 26 > 13 > 15 ~ 28 ~ 30 ~ 33 > 4 > 12 ~ 21 ~ 27 ~ 31 > 2 ~ 29
[1] "-----"
15 ~ 25 ~ 26 ~ 30 > 13 > 28 ~ 33 > 4 ~ 21 ~ 31 > 29 > 12 ~ 27 > 2 
  numberOfVoters                                                           ranking
1             10 15 ~ 25 ~ 26 ~ 30 > 13 > 28 ~ 33 > 4 ~ 21 ~ 31 > 29 > 12 ~ 27 > 2
[1] "-----"
--------> Predict: ties = threshold, k = 3
[1] "Fish" "Bird" "Bird"
[[1]]
Fish ~ Fish ~ Fish ~ Fish > Fish ~ Fish > Bird ~ Bird ~ Bird > Bird > Bird ~ Bird ~ Bird > Bird 

[[2]]
Bird ~ Bird > Bird > Bird ~ Bird ~ Bird ~ Bird > Bird > Fish ~ Fish ~ Fish ~ Fish > Fish ~ Fish 

[[3]]
Bird ~ Bird ~ Bird ~ Bird > Bird > Bird ~ Bird > Bird ~ Fish ~ Fish > Fish > Fish ~ Fish > Fish 

